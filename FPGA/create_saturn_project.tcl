#*****************************************************************************************
# Vivado (TM) v2021.1 (64-bit)
#
# create_saturn_project.tcl: Tcl script for re-creating project 'saturn_project'
#
# Generated by Vivado on Sat Aug 14 21:38:36 +0100 2021
# IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_saturn_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/usr_reg_access.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_spi_adc.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config64_reg.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config256_reg.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_read64_reg.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/pwm_dac.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/Attenuator.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/clockdivider.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/AXILite_Alex_SPI.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/ltc2208_derand.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_mux_4.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/cw_key_ramp.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/cvt_offsetbinary.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/I2S_rcv.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/I2S_xmit.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_adder.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/i2s_clk_lrclk_gen.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_cfg_register.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_mux_2.v"
#    "e:/xilinxdesigns/saturn/FPGA/sources/coefficientfiles/cwkeyershape_960points.coe"
#    "e:/xilinxdesigns/saturn/FPGA/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"
#    "e:/xilinxdesigns/saturn/FPGA/sources/coefficientfiles/cwkeyershape_240points.coe"
#    "e:/xilinxdesigns/saturn/FPGA/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"
#    "e:/xilinxdesigns/saturn/FPGA/constraints/pinconstraints.xdc"
#    "e:/xilinxdesigns/saturn/FPGA/constraints/timingconstraints.xdc"
#    "e:/xilinxdesigns/saturn/FPGA/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/sources/verilogmodules/register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/double_register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/usr_reg_access.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_spi_adc.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_config64_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_config256_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_read64_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/pwm_dac.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/Attenuator.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_2_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/debounce.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/clockdivider.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/AXILite_Alex_SPI.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/ltc2208_derand.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_constant.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_interleaver.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_resizer.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_mux_4.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/cw_key_ramp.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/reg_to_axis.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_variable.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/cvt_offsetbinary.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/I2S_rcv.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/I2S_xmit.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_adder.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/i2s_clk_lrclk_gen.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/stream_reader_writer.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/FIFO_Monitor.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_cfg_register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_4_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_8_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_mux_2.v"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/cwkeyershape_960points.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/cwkeyershape_240points.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"]"\
 "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]"\
 "[file normalize "$origin_dir/constraints/timingconstraints.xdc"]"\
 "[file normalize "$origin_dir/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "saturn_project"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_saturn_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/saturn_project"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tfbg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "platform.description" -value "Vivado generated DSA" -objects $obj
set_property -name "platform.emu_dir" -value "emu" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "3" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "3" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "3" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "3" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "3" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "3" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "3" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/sources/verilogmodules/register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/double_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/usr_reg_access.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_spi_adc.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_config64_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_config256_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_read64_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/pwm_dac.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/Attenuator.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_2_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/debounce.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/clockdivider.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/AXILite_Alex_SPI.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/ltc2208_derand.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_constant.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_interleaver.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_resizer.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_4.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cw_key_ramp.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/reg_to_axis.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_variable.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cvt_offsetbinary.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_rcv.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_xmit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_adder.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/i2s_clk_lrclk_gen.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/stream_reader_writer.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/FIFO_Monitor.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_cfg_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_4_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_8_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_2.v"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_960points.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_240points.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "saturn_top_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/pinconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/timingconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/timingconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "saturn_top_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}


# Proc to create BD DDC_Block
proc cr_bd_DDC_Block { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# Double_D_register, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_4_1, regmux_8_1



  # CHANGE DESIGN NAME HERE
  set design_name DDC_Block

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  Double_D_register\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_4_1\
  regmux_8_1\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set M_AXIS_DATA [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $M_AXIS_DATA


  # Create ports
  set ChanConfig [ create_bd_port -dir I -from 1 -to 0 ChanConfig ]
  set ChanFreq [ create_bd_port -dir I -from 31 -to 0 ChanFreq ]
  set CicInterp [ create_bd_port -dir I -from 2 -to 0 CicInterp ]
  set aclk [ create_bd_port -dir I -type clk -freq_hz 122880000 aclk ]
  set adc1 [ create_bd_port -dir I -from 15 -to 0 adc1 ]
  set adc2 [ create_bd_port -dir I -from 15 -to 0 adc2 ]
  set rstn [ create_bd_port -dir I -type rst rstn ]
  set test_source [ create_bd_port -dir I -from 15 -to 0 test_source ]
  set tx_samples [ create_bd_port -dir I -from 15 -to 0 tx_samples ]

  # Create instance: Double_D_register_0, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_0
  if { [catch {set Double_D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {9} \
 ] $Double_D_register_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_1

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.NUM_SI {2} \
 ] $axis_combiner_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {0} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_dwidth_converter_1

  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
   CONFIG.TDATA_REMAP {tdata[54:32],1'b0,tdata[22:0],1'b0} \
 ] $axis_subset_converter_0

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {16} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {18} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {16} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {18} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.OutputWidth {16} \
 ] $cmpy_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.05} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {System_Parameters} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {95} \
 ] $dds_compiler_0

  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.CoefficientVector {6,0,-4,-3,5,6,-6,-13,7,44,64,44,7,-13,-6,6,5,-3,-4,0,6} \
   CONFIG.Coefficient_Fanout {true} \
   CONFIG.Coefficient_File {../../../../../../../sources/coefficientfiles/512tap_TX_filter_tfilter.coe} \
   CONFIG.Coefficient_Fractional_Bits {24} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {22} \
   CONFIG.ColumnConfig {7} \
   CONFIG.Control_Broadcast_Fanout {true} \
   CONFIG.Control_Column_Fanout {true} \
   CONFIG.Control_LUT_Pipeline {true} \
   CONFIG.Control_Path_Fanout {true} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Path_Broadcast {false} \
   CONFIG.Data_Path_Fanout {true} \
   CONFIG.Data_Width {18} \
   CONFIG.Decimation_Rate {8} \
   CONFIG.Disable_Half_Band_Centre_Tap {false} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.M_DATA_Has_TREADY {true} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.No_BRAM_Read_First_Mode {true} \
   CONFIG.No_SRL_Attributes {false} \
   CONFIG.Number_Channels {2} \
   CONFIG.Optimal_Column_Lengths {true} \
   CONFIG.Optimization_Goal {Speed} \
   CONFIG.Optimization_List {Data_Path_Fanout,Pre-Adder_Pipeline,Coefficient_Fanout,Control_Path_Fanout,Control_Column_Fanout,Control_Broadcast_Fanout,Control_LUT_Pipeline,No_BRAM_Read_First_Mode,Optimal_Column_Lengths,Other}\
   CONFIG.Optimization_Selection {All} \
   CONFIG.Other {true} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {28} \
   CONFIG.Pre_Adder_Pipeline {true} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_TUSER {Not_Required} \
   CONFIG.Sample_Frequency {12.288} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $fir_compiler_0

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_1

  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_8_1_0, and set properties
  set block_name regmux_8_1
  set block_cell_name regmux_8_1_0
  if { [catch {set regmux_8_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_8_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {9} \
 ] $regmux_8_1_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: xlconstant_10, and set properties
  set xlconstant_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_10 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {10} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_10

  # Create instance: xlconstant_160, and set properties
  set xlconstant_160 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_160 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {160} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_160

  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16bits0

  # Create instance: xlconstant_20, and set properties
  set xlconstant_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_20 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {20} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_20

  # Create instance: xlconstant_40, and set properties
  set xlconstant_40 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_40 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {40} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_40

  # Create instance: xlconstant_320, and set properties
  set xlconstant_320 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_320 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {320} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_320

  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_7bits0

  # Create instance: xlconstant_80, and set properties
  set xlconstant_80 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_80 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {80} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_80

  # Create interface connections
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_ports M_AXIS_DATA] [get_bd_intf_pins axis_subset_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins cmpy_0/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins cmpy_0/S_AXIS_B] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net ChanFreq_1 [get_bd_ports ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicInterp_1 [get_bd_ports CicInterp] [get_bd_pins regmux_8_1_0/sel]
  connect_bd_net -net Double_D_register_0_dout [get_bd_pins Double_D_register_0/dout] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net aclk_1 [get_bd_ports aclk] [get_bd_pins Double_D_register_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_4_1_0/aclk] [get_bd_pins regmux_8_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_ports adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_ports adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net regmux_8_1_0_dout [get_bd_pins Double_D_register_0/din] [get_bd_pins regmux_8_1_0/dout]
  connect_bd_net -net rstn_1 [get_bd_ports rstn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins dds_compiler_0/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins regmux_4_1_0/resetn] [get_bd_pins regmux_8_1_0/resetn]
  connect_bd_net -net sel_0_1 [get_bd_ports ChanConfig] [get_bd_pins regmux_4_1_0/sel]
  connect_bd_net -net test_source_1 [get_bd_ports test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_ports tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins reg_to_axis_1/data_in] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_10_dout [get_bd_pins regmux_8_1_0/din5] [get_bd_pins regmux_8_1_0/din6] [get_bd_pins regmux_8_1_0/din7] [get_bd_pins xlconstant_10/dout]
  connect_bd_net -net xlconstant_160_dout [get_bd_pins regmux_8_1_0/din1] [get_bd_pins xlconstant_160/dout]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconstant_16bits0/dout]
  connect_bd_net -net xlconstant_20_dout [get_bd_pins regmux_8_1_0/din4] [get_bd_pins xlconstant_20/dout]
  connect_bd_net -net xlconstant_320_dout [get_bd_pins regmux_8_1_0/din0] [get_bd_pins xlconstant_320/dout]
  connect_bd_net -net xlconstant_40_dout [get_bd_pins regmux_8_1_0/din3] [get_bd_pins xlconstant_40/dout]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_7bits0/dout]
  connect_bd_net -net xlconstant_80_dout [get_bd_pins regmux_8_1_0/din2] [get_bd_pins xlconstant_80/dout]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_DDC_Block()
cr_bd_DDC_Block ""
set_property REGISTERED_WITH_MANAGER "1" [get_files DDC_Block.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files DDC_Block.bd ] 

if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files usr_reg_access.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/usr_reg_access.v
}
if { [get_files axi_spi_adc.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_spi_adc.v
}
if { [get_files AXI_ADC_overrange_latch_reader.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v
}
if { [get_files axil_config64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config64_reg.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files axil_read64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_read64_reg.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files pwm_dac.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/pwm_dac.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/Attenuator.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/Attenuator.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files AXILite_Alex_SPI.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/AXILite_Alex_SPI.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axi_stream_interleaver.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files axi_stream_interleaver.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files axi_stream_interleaver.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files axi_stream_interleaver.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files axi_stream_interleaver.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axi_stream_resizer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_mux_4.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_mux_4.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files cvt_offsetbinary.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/cvt_offsetbinary.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files I2S_rcv.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/I2S_rcv.v
}
if { [get_files I2S_xmit.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/I2S_xmit.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files i2s_clk_lrclk_gen.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/i2s_clk_lrclk_gen.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files FIFO_Monitor.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files FIFO_Monitor.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files FIFO_Monitor.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files FIFO_Monitor.v] == "" } {
  import_files -quiet -fileset sources_1 e:/xilinxdesigns/saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v
}


# Proc to create BD saturn_top
proc cr_bd_saturn_top { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, FIFO_Monitor, FIFO_Monitor, FIFO_Monitor, FIFO_Monitor, AXIL_ConfigReg_256, AXIL_ConfigReg_64, AXIL_ReadReg_64, AXI_ADC_overrange_reader, AXI_SPI_ADC, D_register, D_register, Double_D_register, Double_D_register, Usr_Reg_Access, AXILite_Alex_SPI, AXIL_ConfigReg_256, AXIL_ConfigReg_256, LTC2208_derandomise, LTC2208_derandomise, axis_constant, D_register, D_register, axis_constant, axis_variable, axis_variable, cvt_offset_binary, regmux_2_1, regmux_2_1, I2S_rcv, I2S_xmit, axis_adder, axis_adder, axis_constant, axis_constant, cw_key_ramp, i2s_clk_lrclk_gen, PWM_DAC, SerialAtten, SerialAtten, regmux_2_1, regmux_2_1, regmux_2_1, regmux_2_1, ClockDivider, debounce, debounce, debounce, debounce, debounce, debounce, debounce, debounce, AXIS_Interleaver, AXIS_Sizer_48to64, AXIS_Sizer_48to64, D_register, D_register, D_register, D_register, AXIS_Interleaver, AXIS_Sizer_48to64, AXIS_Sizer_48to64, D_register, D_register, D_register, D_register, AXIS_Interleaver, AXIS_Sizer_48to64, AXIS_Sizer_48to64, D_register, D_register, D_register, D_register, AXIS_Interleaver, AXIS_Sizer_48to64, AXIS_Sizer_48to64, D_register, D_register, D_register, D_register, AXIS_Interleaver, AXIS_Sizer_48to64, AXIS_Sizer_48to64, D_register, D_register, D_register, D_register, axis_constant, axis_mux_4, cw_key_ramp, reg_to_axis


# The design that will be created by this Tcl proc contains the following 
# block design container source references:
# DDC_Block



  # CHANGE DESIGN NAME HERE
  set design_name saturn_top

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  # Add USER_COMMENTS on $design_name
  set_property USER_COMMENTS.comment_15 "main 122MHz clock distribute" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_22 "main 122MHz clock distribute" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_23 "convert to I/Q stream" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_27 "reads back USR_ACCESS register 
to get user assigned device ID" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_28 "main 122MHz clock distribute" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_30 "convert to I/Q stream" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_34 "reads back USR_ACCESS register 
to get user assigned device ID" [get_bd_designs $design_name]

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:c_counter_binary:12.0\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_iic:2.1\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xadc_wiz:3.3\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:cordic:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:mult_gen:12.0\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:util_reduced_logic:2.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  FIFO_Monitor\
  FIFO_Monitor\
  FIFO_Monitor\
  FIFO_Monitor\
  AXIL_ConfigReg_256\
  AXIL_ConfigReg_64\
  AXIL_ReadReg_64\
  AXI_ADC_overrange_reader\
  AXI_SPI_ADC\
  D_register\
  D_register\
  Double_D_register\
  Double_D_register\
  Usr_Reg_Access\
  AXILite_Alex_SPI\
  AXIL_ConfigReg_256\
  AXIL_ConfigReg_256\
  LTC2208_derandomise\
  LTC2208_derandomise\
  axis_constant\
  D_register\
  D_register\
  axis_constant\
  axis_variable\
  axis_variable\
  cvt_offset_binary\
  regmux_2_1\
  regmux_2_1\
  I2S_rcv\
  I2S_xmit\
  axis_adder\
  axis_adder\
  axis_constant\
  axis_constant\
  cw_key_ramp\
  i2s_clk_lrclk_gen\
  PWM_DAC\
  SerialAtten\
  SerialAtten\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  ClockDivider\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  AXIS_Interleaver\
  AXIS_Sizer_48to64\
  AXIS_Sizer_48to64\
  D_register\
  D_register\
  D_register\
  D_register\
  AXIS_Interleaver\
  AXIS_Sizer_48to64\
  AXIS_Sizer_48to64\
  D_register\
  D_register\
  D_register\
  D_register\
  AXIS_Interleaver\
  AXIS_Sizer_48to64\
  AXIS_Sizer_48to64\
  D_register\
  D_register\
  D_register\
  D_register\
  AXIS_Interleaver\
  AXIS_Sizer_48to64\
  AXIS_Sizer_48to64\
  D_register\
  D_register\
  D_register\
  D_register\
  AXIS_Interleaver\
  AXIS_Sizer_48to64\
  AXIS_Sizer_48to64\
  D_register\
  D_register\
  D_register\
  D_register\
  axis_constant\
  axis_mux_4\
  cw_key_ramp\
  reg_to_axis\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  ##################################################################
  # CHECK Block Design Container Sources
  ##################################################################
  set bCheckSources 1
  set list_bdc_active "DDC_Block"

  array set map_bdc_missing {}
  set map_bdc_missing(ACTIVE) ""
  set map_bdc_missing(BDC) ""

  if { $bCheckSources == 1 } {
     set list_check_srcs "\ 
  DDC_Block \
  "

   common::send_gid_msg -ssname BD::TCL -id 2056 -severity "INFO" "Checking if the following sources for block design container exist in the project: $list_check_srcs .\n\n"

   foreach src $list_check_srcs {
      if { [can_resolve_reference $src] == 0 } {
         if { [lsearch $list_bdc_active $src] != -1 } {
            set map_bdc_missing(ACTIVE) "$map_bdc_missing(ACTIVE) $src"
         } else {
            set map_bdc_missing(BDC) "$map_bdc_missing(BDC) $src"
         }
      }
   }

   if { [llength $map_bdc_missing(ACTIVE)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2057 -severity "ERROR" "The following source(s) of Active variants are not found in the project: $map_bdc_missing(ACTIVE)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
      set bCheckIPsPassed 0
   }
   if { [llength $map_bdc_missing(BDC)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2059 -severity "WARNING" "The following source(s) of variants are not found in the project: $map_bdc_missing(BDC)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: IQ_Modulation_Select
proc create_hier_cell_IQ_Modulation_Select { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_IQ_Modulation_Select() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_in

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 output_axis


  # Create pins
  create_bd_pin -dir O CWSampleSelect
  create_bd_pin -dir I -from 2 -to 0 Modulation_Setup
  create_bd_pin -dir I -from 31 -to 0 TXTestFreq
  create_bd_pin -dir I TX_ENABLE
  create_bd_pin -dir O -from 0 -to 0 TX_OUTPUTENABLE
  create_bd_pin -dir I TX_Strobe
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I cw_key_down
  create_bd_pin -dir O cw_ptt
  create_bd_pin -dir I -from 31 -to 0 keyer_config
  create_bd_pin -dir I protocol_2
  create_bd_pin -dir I -type rst resetn

  # Create instance: axis_constant_1, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_1
  if { [catch {set axis_constant_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {32} \
 ] $axis_constant_1

  # Create instance: axis_mux_4_0, and set properties
  set block_name axis_mux_4
  set block_cell_name axis_mux_4_0
  if { [catch {set axis_mux_4_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_4_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CONSUME_ALL {1} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.DEST_WIDTH {0} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.KEEP_ENABLE {false} \
   CONFIG.KEEP_WIDTH {0} \
   CONFIG.USER_ENABLE {0} \
   CONFIG.USER_WIDTH {0} \
 ] $axis_mux_4_0

  # Create instance: axis_subset_converter_0_TEMP, and set properties
  set axis_subset_converter_0_TEMP [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0_TEMP ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
   CONFIG.TDATA_REMAP {tdata[63:48],tdata[31:16]} \
 ] $axis_subset_converter_0_TEMP

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Byte_Size {9} \
   CONFIG.Coe_File {../../../../../../../sources/coefficientfiles/cwkeyershape_960points.coe} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_A {Always_Enabled} \
   CONFIG.Load_Init_File {true} \
   CONFIG.Memory_Type {Single_Port_ROM} \
   CONFIG.Port_A_Write_Rate {0} \
   CONFIG.Read_Width_A {16} \
   CONFIG.Read_Width_B {16} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {true} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Write_Depth_A {1024} \
   CONFIG.Write_Width_A {16} \
   CONFIG.Write_Width_B {16} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: cw_key_ramp_0, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_0
  if { [catch {set cw_key_ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.RAMP_END {959} \
   CONFIG.is_audio {0} \
 ] $cw_key_ramp_0

  # Create instance: dds_compiler_testsource, and set properties
  set dds_compiler_testsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_testsource ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.05} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {14} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Negative_Cosine {false} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {94} \
 ] $dds_compiler_testsource

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: util_vector_OR_TXgate, and set properties
  set util_vector_OR_TXgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_OR_TXgate ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_OR_TXgate

  # Create instance: util_vector_TXgate1, and set properties
  set util_vector_TXgate1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_TXgate1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {and} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_andgate.png} \
 ] $util_vector_TXgate1

  # Create instance: xlconst_amplQ, and set properties
  set xlconst_amplQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconst_amplQ ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0x00007FFF} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconst_amplQ

  # Create instance: xlslice_TXsel, and set properties
  set xlslice_TXsel [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_TXsel ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {3} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_TXsel

  # Create instance: xlslice_keyerdelay, and set properties
  set xlslice_keyerdelay [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerdelay ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_keyerdelay

  # Create instance: xlslice_keyeren, and set properties
  set xlslice_keyeren [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyeren ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_keyeren

  # Create instance: xlslice_keyerhang, and set properties
  set xlslice_keyerhang [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerhang ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {10} \
 ] $xlslice_keyerhang

  # Create instance: xlslice_opgate, and set properties
  set xlslice_opgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_opgate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_opgate

  # Create interface connections
  connect_bd_intf_net -intf_net TX_IQ_in_1 [get_bd_intf_pins TX_IQ_in] [get_bd_intf_pins axis_subset_converter_0_TEMP/S_AXIS]
  connect_bd_intf_net -intf_net axis_constant_1_m_axis [get_bd_intf_pins axis_constant_1/m_axis] [get_bd_intf_pins dds_compiler_testsource/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_mux_4_0_output_axis [get_bd_intf_pins output_axis] [get_bd_intf_pins axis_mux_4_0/output_axis]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins axis_mux_4_0/input_0_axis] [get_bd_intf_pins axis_subset_converter_0_TEMP/M_AXIS]
  connect_bd_intf_net -intf_net cw_key_ramp_0_m_axis [get_bd_intf_pins axis_mux_4_0/input_3_axis] [get_bd_intf_pins cw_key_ramp_0/m_axis]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_mux_4_0/input_2_axis] [get_bd_intf_pins dds_compiler_testsource/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins axis_mux_4_0/input_1_axis] [get_bd_intf_pins reg_to_axis_0/m_axis]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins Modulation_Setup] [get_bd_pins xlslice_TXsel/Din] [get_bd_pins xlslice_opgate/Din]
  connect_bd_net -net Net1 [get_bd_pins clk] [get_bd_pins axis_constant_1/aclk] [get_bd_pins axis_mux_4_0/clk] [get_bd_pins axis_subset_converter_0_TEMP/aclk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins cw_key_ramp_0/aclk] [get_bd_pins dds_compiler_testsource/aclk] [get_bd_pins reg_to_axis_0/aclk]
  connect_bd_net -net TX_ENABLE_1 [get_bd_pins TX_ENABLE] [get_bd_pins util_vector_TXgate1/Op2]
  connect_bd_net -net TX_Strobe_1 [get_bd_pins TX_Strobe] [get_bd_pins util_vector_OR_TXgate/Op2]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_pins TXTestFreq] [get_bd_pins axis_constant_1/cfg_data]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins cw_key_ramp_0/bram_data]
  connect_bd_net -net cw_key_down_1 [get_bd_pins cw_key_down] [get_bd_pins cw_key_ramp_0/key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT [get_bd_pins cw_ptt] [get_bd_pins cw_key_ramp_0/CW_PTT]
  connect_bd_net -net cw_key_ramp_0_bram_addr [get_bd_pins blk_mem_gen_0/addra] [get_bd_pins cw_key_ramp_0/bram_addr]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins xlslice_keyerdelay/Din] [get_bd_pins xlslice_keyeren/Din] [get_bd_pins xlslice_keyerhang/Din]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins axis_mux_4_0/rstn] [get_bd_pins axis_subset_converter_0_TEMP/aresetn] [get_bd_pins cw_key_ramp_0/resetn] [get_bd_pins dds_compiler_testsource/aresetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins CWSampleSelect] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_vector_OR_TXgate_Res [get_bd_pins util_vector_OR_TXgate/Res] [get_bd_pins util_vector_TXgate1/Op1]
  connect_bd_net -net util_vector_TXgate1_Res [get_bd_pins TX_OUTPUTENABLE] [get_bd_pins util_vector_TXgate1/Res]
  connect_bd_net -net xlconst_amplQ_dout [get_bd_pins reg_to_axis_0/data_in] [get_bd_pins xlconst_amplQ/dout]
  connect_bd_net -net xlslice_TXsel_Dout [get_bd_pins axis_mux_4_0/sel] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlslice_TXsel/Dout]
  connect_bd_net -net xlslice_keyerdelay_Dout [get_bd_pins cw_key_ramp_0/delay_time] [get_bd_pins xlslice_keyerdelay/Dout]
  connect_bd_net -net xlslice_keyeren_Dout [get_bd_pins cw_key_ramp_0/keyer_enable] [get_bd_pins xlslice_keyeren/Dout]
  connect_bd_net -net xlslice_keyerhang_Dout [get_bd_pins cw_key_ramp_0/hang_time] [get_bd_pins xlslice_keyerhang/Dout]
  connect_bd_net -net xlslice_opgate_Dout [get_bd_pins util_vector_OR_TXgate/Op1] [get_bd_pins xlslice_opgate/Dout]
  connect_bd_net -net xlslice_rate_Dout [get_bd_pins protocol_2] [get_bd_pins cw_key_ramp_0/protocol_2]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC98
proc create_hier_cell_dualDDC98 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC98() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 31 -to 0 DualDDCConfig
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: AXIS_Interleaver_0, and set properties
  set block_name AXIS_Interleaver
  set block_cell_name AXIS_Interleaver_0
  if { [catch {set AXIS_Interleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Interleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_0, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_0
  if { [catch {set AXIS_Sizer_48to64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_1, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_1
  if { [catch {set AXIS_Sizer_48to64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_0

  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_1

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Arate

  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Asource

  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Brate

  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Bsource

  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_enable

  # Create instance: xlslice_interleave, and set properties
  set xlslice_interleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_interleave ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_interleave

  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m00_axis [get_bd_intf_pins AXIS_Interleaver_0/m00_axis] [get_bd_intf_pins AXIS_Sizer_48to64_0/s_axis]
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m01_axis [get_bd_intf_pins AXIS_Interleaver_0/m01_axis] [get_bd_intf_pins AXIS_Sizer_48to64_1/s_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_0] [get_bd_intf_pins AXIS_Sizer_48to64_0/m_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_1] [get_bd_intf_pins AXIS_Sizer_48to64_1/m_axis]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s00_axis] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s01_axis] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net AXIS_Interleaver_0_mux_reset [get_bd_pins AXIS_Interleaver_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_1/mux_reset]
  connect_bd_net -net ChanConfig_1 [get_bd_pins DDC_Block_0/ChanConfig] [get_bd_pins xlslice_Asource/Dout]
  connect_bd_net -net ChanConfig_2 [get_bd_pins DDC_Block_1/ChanConfig] [get_bd_pins xlslice_Bsource/Dout]
  connect_bd_net -net CicInterp_1 [get_bd_pins DDC_Block_0/CicInterp] [get_bd_pins xlslice_Arate/Dout]
  connect_bd_net -net CicInterp_2 [get_bd_pins DDC_Block_1/CicInterp] [get_bd_pins xlslice_Brate/Dout]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins AXIS_Interleaver_0/aclk] [get_bd_pins AXIS_Sizer_48to64_0/aclk] [get_bd_pins AXIS_Sizer_48to64_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins AXIS_Interleaver_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_1/aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Brate/Din] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_interleave/Din]
  connect_bd_net -net adc1_1 [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1] [get_bd_pins D_register_0/dout]
  connect_bd_net -net adc2_1 [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins D_register_1/dout]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net test_source_1 [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins D_register_3/dout]
  connect_bd_net -net tx_samples_1 [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins D_register_2/dout]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins AXIS_Interleaver_0/enabled] [get_bd_pins xlslice_enable/Dout]
  connect_bd_net -net xlslice_interleave_Dout [get_bd_pins AXIS_Interleaver_0/interleave] [get_bd_pins xlslice_interleave/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC76
proc create_hier_cell_dualDDC76 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC76() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 31 -to 0 DualDDCConfig
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: AXIS_Interleaver_0, and set properties
  set block_name AXIS_Interleaver
  set block_cell_name AXIS_Interleaver_0
  if { [catch {set AXIS_Interleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Interleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_0, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_0
  if { [catch {set AXIS_Sizer_48to64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_1, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_1
  if { [catch {set AXIS_Sizer_48to64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_0

  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_1

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Arate

  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Asource

  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Brate

  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Bsource

  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_enable

  # Create instance: xlslice_interleave, and set properties
  set xlslice_interleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_interleave ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_interleave

  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m00_axis [get_bd_intf_pins AXIS_Interleaver_0/m00_axis] [get_bd_intf_pins AXIS_Sizer_48to64_0/s_axis]
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m01_axis [get_bd_intf_pins AXIS_Interleaver_0/m01_axis] [get_bd_intf_pins AXIS_Sizer_48to64_1/s_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_0] [get_bd_intf_pins AXIS_Sizer_48to64_0/m_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_1] [get_bd_intf_pins AXIS_Sizer_48to64_1/m_axis]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s00_axis] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s01_axis] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net AXIS_Interleaver_0_mux_reset [get_bd_pins AXIS_Interleaver_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_1/mux_reset]
  connect_bd_net -net ChanConfig_1 [get_bd_pins DDC_Block_0/ChanConfig] [get_bd_pins xlslice_Asource/Dout]
  connect_bd_net -net ChanConfig_2 [get_bd_pins DDC_Block_1/ChanConfig] [get_bd_pins xlslice_Bsource/Dout]
  connect_bd_net -net CicInterp_1 [get_bd_pins DDC_Block_0/CicInterp] [get_bd_pins xlslice_Arate/Dout]
  connect_bd_net -net CicInterp_2 [get_bd_pins DDC_Block_1/CicInterp] [get_bd_pins xlslice_Brate/Dout]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins AXIS_Interleaver_0/aclk] [get_bd_pins AXIS_Sizer_48to64_0/aclk] [get_bd_pins AXIS_Sizer_48to64_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins AXIS_Interleaver_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_1/aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Brate/Din] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_interleave/Din]
  connect_bd_net -net adc1_1 [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1] [get_bd_pins D_register_0/dout]
  connect_bd_net -net adc2_1 [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins D_register_1/dout]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net test_source_1 [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins D_register_3/dout]
  connect_bd_net -net tx_samples_1 [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins D_register_2/dout]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins AXIS_Interleaver_0/enabled] [get_bd_pins xlslice_enable/Dout]
  connect_bd_net -net xlslice_interleave_Dout [get_bd_pins AXIS_Interleaver_0/interleave] [get_bd_pins xlslice_interleave/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC54
proc create_hier_cell_dualDDC54 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC54() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 31 -to 0 DualDDCConfig
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: AXIS_Interleaver_0, and set properties
  set block_name AXIS_Interleaver
  set block_cell_name AXIS_Interleaver_0
  if { [catch {set AXIS_Interleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Interleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_0, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_0
  if { [catch {set AXIS_Sizer_48to64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_1, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_1
  if { [catch {set AXIS_Sizer_48to64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_0

  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_1

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Arate

  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Asource

  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Brate

  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Bsource

  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_enable

  # Create instance: xlslice_interleave, and set properties
  set xlslice_interleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_interleave ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_interleave

  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m00_axis [get_bd_intf_pins AXIS_Interleaver_0/m00_axis] [get_bd_intf_pins AXIS_Sizer_48to64_0/s_axis]
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m01_axis [get_bd_intf_pins AXIS_Interleaver_0/m01_axis] [get_bd_intf_pins AXIS_Sizer_48to64_1/s_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_0] [get_bd_intf_pins AXIS_Sizer_48to64_0/m_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_1] [get_bd_intf_pins AXIS_Sizer_48to64_1/m_axis]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s00_axis] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s01_axis] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net AXIS_Interleaver_0_mux_reset [get_bd_pins AXIS_Interleaver_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_1/mux_reset]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins AXIS_Interleaver_0/aclk] [get_bd_pins AXIS_Sizer_48to64_0/aclk] [get_bd_pins AXIS_Sizer_48to64_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins AXIS_Interleaver_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_1/aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Brate/Din] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_interleave/Din]
  connect_bd_net -net adc1_1 [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1] [get_bd_pins D_register_0/dout]
  connect_bd_net -net adc2_1 [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins D_register_1/dout]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net test_source_1 [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins D_register_3/dout]
  connect_bd_net -net tx_samples_1 [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins D_register_2/dout]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins DDC_Block_0/CicInterp] [get_bd_pins xlslice_Arate/Dout]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins DDC_Block_0/ChanConfig] [get_bd_pins xlslice_Asource/Dout]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins DDC_Block_1/CicInterp] [get_bd_pins xlslice_Brate/Dout]
  connect_bd_net -net xlslice_Bsource_Dout [get_bd_pins DDC_Block_1/ChanConfig] [get_bd_pins xlslice_Bsource/Dout]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins AXIS_Interleaver_0/enabled] [get_bd_pins xlslice_enable/Dout]
  connect_bd_net -net xlslice_interleave_Dout [get_bd_pins AXIS_Interleaver_0/interleave] [get_bd_pins xlslice_interleave/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC32
proc create_hier_cell_dualDDC32 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC32() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 31 -to 0 DualDDCConfig
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: AXIS_Interleaver_0, and set properties
  set block_name AXIS_Interleaver
  set block_cell_name AXIS_Interleaver_0
  if { [catch {set AXIS_Interleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Interleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_0, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_0
  if { [catch {set AXIS_Sizer_48to64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_1, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_1
  if { [catch {set AXIS_Sizer_48to64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_0

  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_1

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Arate

  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Asource

  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Brate

  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Bsource

  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_enable

  # Create instance: xlslice_interleave, and set properties
  set xlslice_interleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_interleave ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_interleave

  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m00_axis [get_bd_intf_pins AXIS_Interleaver_0/m00_axis] [get_bd_intf_pins AXIS_Sizer_48to64_0/s_axis]
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m01_axis [get_bd_intf_pins AXIS_Interleaver_0/m01_axis] [get_bd_intf_pins AXIS_Sizer_48to64_1/s_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_0] [get_bd_intf_pins AXIS_Sizer_48to64_0/m_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_1] [get_bd_intf_pins AXIS_Sizer_48to64_1/m_axis]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s00_axis] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s01_axis] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net AXIS_Interleaver_0_mux_reset [get_bd_pins AXIS_Interleaver_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_1/mux_reset]
  connect_bd_net -net ChanConfig_1 [get_bd_pins DDC_Block_0/ChanConfig] [get_bd_pins xlslice_Asource/Dout]
  connect_bd_net -net ChanConfig_2 [get_bd_pins DDC_Block_1/ChanConfig] [get_bd_pins xlslice_Bsource/Dout]
  connect_bd_net -net CicInterp_1 [get_bd_pins DDC_Block_0/CicInterp] [get_bd_pins xlslice_Arate/Dout]
  connect_bd_net -net CicInterp_2 [get_bd_pins DDC_Block_1/CicInterp] [get_bd_pins xlslice_Brate/Dout]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins AXIS_Interleaver_0/aclk] [get_bd_pins AXIS_Sizer_48to64_0/aclk] [get_bd_pins AXIS_Sizer_48to64_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins AXIS_Interleaver_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_1/aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Brate/Din] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_interleave/Din]
  connect_bd_net -net adc1_1 [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1] [get_bd_pins D_register_0/dout]
  connect_bd_net -net adc2_1 [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins D_register_1/dout]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net test_source_1 [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins D_register_3/dout]
  connect_bd_net -net tx_samples_1 [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins D_register_2/dout]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins AXIS_Interleaver_0/enabled] [get_bd_pins xlslice_enable/Dout]
  connect_bd_net -net xlslice_interleave_Dout [get_bd_pins AXIS_Interleaver_0/interleave] [get_bd_pins xlslice_interleave/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC10
proc create_hier_cell_dualDDC10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 31 -to 0 DualDDCConfig
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: AXIS_Interleaver_0, and set properties
  set block_name AXIS_Interleaver
  set block_cell_name AXIS_Interleaver_0
  if { [catch {set AXIS_Interleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Interleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_0, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_0
  if { [catch {set AXIS_Sizer_48to64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_Sizer_48to64_1, and set properties
  set block_name AXIS_Sizer_48to64
  set block_cell_name AXIS_Sizer_48to64_1
  if { [catch {set AXIS_Sizer_48to64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_48to64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_0

  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
   CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {DDC_Block.bd} \
   CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $DDC_Block_1

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Arate

  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Asource

  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_Brate

  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_Bsource

  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_enable

  # Create instance: xlslice_interleave, and set properties
  set xlslice_interleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_interleave ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_interleave

  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m00_axis [get_bd_intf_pins AXIS_Interleaver_0/m00_axis] [get_bd_intf_pins AXIS_Sizer_48to64_0/s_axis]
  connect_bd_intf_net -intf_net AXIS_Interleaver_0_m01_axis [get_bd_intf_pins AXIS_Interleaver_0/m01_axis] [get_bd_intf_pins AXIS_Sizer_48to64_1/s_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_0] [get_bd_intf_pins AXIS_Sizer_48to64_0/m_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_1] [get_bd_intf_pins AXIS_Sizer_48to64_1/m_axis]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s00_axis] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins AXIS_Interleaver_0/s01_axis] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net AXIS_Interleaver_0_mux_reset [get_bd_pins AXIS_Interleaver_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_0/mux_reset] [get_bd_pins AXIS_Sizer_48to64_1/mux_reset]
  connect_bd_net -net ChanConfig_1 [get_bd_pins DDC_Block_1/ChanConfig] [get_bd_pins xlslice_Bsource/Dout]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_0_dout [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1] [get_bd_pins D_register_0/dout]
  connect_bd_net -net D_register_1_dout [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins D_register_1/dout]
  connect_bd_net -net D_register_2_dout [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins D_register_2/dout]
  connect_bd_net -net D_register_3_dout [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins D_register_3/dout]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins AXIS_Interleaver_0/aclk] [get_bd_pins AXIS_Sizer_48to64_0/aclk] [get_bd_pins AXIS_Sizer_48to64_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins AXIS_Interleaver_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_0/aresetn] [get_bd_pins AXIS_Sizer_48to64_1/aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Brate/Din] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_interleave/Din]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins DDC_Block_0/CicInterp] [get_bd_pins xlslice_Arate/Dout]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins DDC_Block_0/ChanConfig] [get_bd_pins xlslice_Asource/Dout]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins DDC_Block_1/CicInterp] [get_bd_pins xlslice_Brate/Dout]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins AXIS_Interleaver_0/enabled] [get_bd_pins xlslice_enable/Dout]
  connect_bd_net -net xlslice_interleave_Dout [get_bd_pins AXIS_Interleaver_0/interleave] [get_bd_pins xlslice_interleave/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: debounce
proc create_hier_cell_debounce { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_debounce() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O CW_Key_Down
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out

  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.Divisor {12000} \
 ] $ClockDivider_0

  # Create instance: debounce_0, and set properties
  set block_name debounce
  set block_cell_name debounce_0
  if { [catch {set debounce_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_0

  # Create instance: debounce_1, and set properties
  set block_name debounce
  set block_cell_name debounce_1
  if { [catch {set debounce_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_1

  # Create instance: debounce_2, and set properties
  set block_name debounce
  set block_cell_name debounce_2
  if { [catch {set debounce_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_2

  # Create instance: debounce_3, and set properties
  set block_name debounce
  set block_cell_name debounce_3
  if { [catch {set debounce_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_3

  # Create instance: debounce_4, and set properties
  set block_name debounce
  set block_cell_name debounce_4
  if { [catch {set debounce_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_4

  # Create instance: debounce_5, and set properties
  set block_name debounce
  set block_cell_name debounce_5
  if { [catch {set debounce_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_5 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_5

  # Create instance: debounce_6, and set properties
  set block_name debounce
  set block_cell_name debounce_6
  if { [catch {set debounce_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_6 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_6

  # Create instance: debounce_8, and set properties
  set block_name debounce
  set block_cell_name debounce_8
  if { [catch {set debounce_8 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_8 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_8

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN8_WIDTH {2} \
   CONFIG.NUM_PORTS {9} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {10} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_8

  # Create port connections
  connect_bd_net -net ClockDivider_0_TCN [get_bd_pins ClockDivider_0/TCN] [get_bd_pins debounce_0/ce_n] [get_bd_pins debounce_1/ce_n] [get_bd_pins debounce_2/ce_n] [get_bd_pins debounce_3/ce_n] [get_bd_pins debounce_4/ce_n] [get_bd_pins debounce_5/ce_n] [get_bd_pins debounce_6/ce_n] [get_bd_pins debounce_8/ce_n]
  connect_bd_net -net Net3 [get_bd_pins status_in] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins debounce_0/aclk] [get_bd_pins debounce_1/aclk] [get_bd_pins debounce_2/aclk] [get_bd_pins debounce_3/aclk] [get_bd_pins debounce_4/aclk] [get_bd_pins debounce_5/aclk] [get_bd_pins debounce_6/aclk] [get_bd_pins debounce_8/aclk]
  connect_bd_net -net debounce_0_clean_pbn [get_bd_pins debounce_0/clean_pbn] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net debounce_1_clean_pbn [get_bd_pins debounce_1/clean_pbn] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net debounce_2_clean_pbn [get_bd_pins debounce_2/clean_pbn] [get_bd_pins xlconcat_0/In2] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net debounce_3_clean_pbn [get_bd_pins debounce_3/clean_pbn] [get_bd_pins xlconcat_0/In3] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net debounce_4_clean_pb [get_bd_pins debounce_4/clean_pb] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net debounce_5_clean_pb [get_bd_pins debounce_5/clean_pb] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net debounce_6_clean_pb [get_bd_pins debounce_6/clean_pb] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net debounce_8_clean_pb [get_bd_pins debounce_8/clean_pb] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins ClockDivider_0/resetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins CW_Key_Down] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins status_out] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins debounce_0/pb_in] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins debounce_1/pb_in] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins debounce_2/pb_in] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins debounce_3/pb_in] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins debounce_4/pb_in] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout1 [get_bd_pins debounce_5/pb_in] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout1 [get_bd_pins debounce_6/pb_in] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins debounce_8/pb_in] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_8/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Strobes
proc create_hier_cell_Strobes { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Strobes() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O TXRX_RELAY
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: util_reduced_logic_1, and set properties
  set util_reduced_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_1

  # Create instance: util_reduced_logic_2, and set properties
  set util_reduced_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_2 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_2

  # Create instance: util_reduced_logic_3, and set properties
  set util_reduced_logic_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_3 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {and} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_andgate.png} \
 ] $util_reduced_logic_3

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_1

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_2

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_3

  # Create instance: xlconcat_4, and set properties
  set xlconcat_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_4 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DOUT_WIDTH {24} \
 ] $xlslice_0

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create port connections
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins MOX_strobe] [get_bd_pins util_reduced_logic_1/Res] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins CTRL_TRSW] [get_bd_pins util_reduced_logic_2/Res]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins TXRX_RELAY] [get_bd_pins util_reduced_logic_3/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins util_reduced_logic_1/Op1] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins util_reduced_logic_2/Op1] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins util_reduced_logic_3/Op1] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net xlconcat_4_dout [get_bd_pins ADC_Randomise] [get_bd_pins xlconcat_4/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins GPIO_OUT] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_1/In0] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_2/In0] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins ATU_TUNE] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_4/In0] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_4/In1] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: AttenDrivers
proc create_hier_cell_AttenDrivers { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_AttenDrivers() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I tx_strobe

  # Create instance: PWM_DAC_0, and set properties
  set block_name PWM_DAC
  set block_cell_name PWM_DAC_0
  if { [catch {set PWM_DAC_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PWM_DAC_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_0, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_0
  if { [catch {set SerialAtten_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_1, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_1
  if { [catch {set SerialAtten_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {8} \
 ] $regmux_2_1_0

  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {6} \
 ] $regmux_2_1_1

  # Create instance: regmux_2_1_2, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_2
  if { [catch {set regmux_2_1_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $regmux_2_1_2

  # Create instance: regmux_2_1_3, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_3
  if { [catch {set regmux_2_1_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $regmux_2_1_3

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {6} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {6} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {5} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {10} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {15} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_7

  # Create port connections
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins TX_DAC_PWM] [get_bd_pins PWM_DAC_0/DAC_bit]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins ADC1_ATTEN_CLK] [get_bd_pins SerialAtten_0/ATTN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins ADC1_ATTEN_DAT] [get_bd_pins SerialAtten_0/ATTN_DATA]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins ADC1_ATTEN_LE] [get_bd_pins SerialAtten_0/ATTN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins ADC2_ATTEN_CLK] [get_bd_pins SerialAtten_1/ATTN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins ADC2_ATTEN_DAT] [get_bd_pins SerialAtten_1/ATTN_DATA]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins ADC2_ATTEN_LE] [get_bd_pins SerialAtten_1/ATTN_LE]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins PWM_DAC_0/aclk] [get_bd_pins SerialAtten_0/aclk] [get_bd_pins SerialAtten_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_2_1_1/aclk] [get_bd_pins regmux_2_1_2/aclk] [get_bd_pins regmux_2_1_3/aclk]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins PWM_DAC_0/PWM_source] [get_bd_pins regmux_2_1_0/dout]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins Dac_Atten] [get_bd_pins regmux_2_1_1/dout]
  connect_bd_net -net regmux_2_1_2_dout [get_bd_pins SerialAtten_0/data] [get_bd_pins regmux_2_1_2/dout]
  connect_bd_net -net regmux_2_1_3_dout [get_bd_pins SerialAtten_1/data] [get_bd_pins regmux_2_1_3/dout]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins SerialAtten_0/resetn] [get_bd_pins SerialAtten_1/resetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_2_1_1/resetn] [get_bd_pins regmux_2_1_2/resetn] [get_bd_pins regmux_2_1_3/resetn]
  connect_bd_net -net tx_strobe_1 [get_bd_pins tx_strobe] [get_bd_pins regmux_2_1_0/sel] [get_bd_pins regmux_2_1_1/sel] [get_bd_pins regmux_2_1_2/sel] [get_bd_pins regmux_2_1_3/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins SerialAtten_0/ce_n] [get_bd_pins SerialAtten_1/ce_n] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins regmux_2_1_1/din0] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins regmux_2_1_1/din1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins regmux_2_1_2/din1] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins regmux_2_1_2/din0] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins regmux_2_1_3/din0] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins regmux_2_1_3/din1] [get_bd_pins xlslice_7/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: clock_generator
proc create_hier_cell_clock_generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_clock_generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I clock_122_in_n
  create_bd_pin -dir I -type clk clock_122_in_p
  create_bd_pin -dir O -type clk clock_122_out
  create_bd_pin -dir O clock_122_out_delayed
  create_bd_pin -dir O -type clk clock_12_out
  create_bd_pin -dir O pll_cr
  create_bd_pin -dir I -from 0 -to 0 ref_in_10
  create_bd_pin -dir I -from 0 -to 0 resetn

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {81.38} \
   CONFIG.CLKOUT1_DRIVES {BUFG} \
   CONFIG.CLKOUT1_JITTER {121.076} \
   CONFIG.CLKOUT1_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {122.88} \
   CONFIG.CLKOUT2_DRIVES {BUFG} \
   CONFIG.CLKOUT2_JITTER {192.138} \
   CONFIG.CLKOUT2_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {12.288} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_DRIVES {BUFG} \
   CONFIG.CLKOUT3_JITTER {121.076} \
   CONFIG.CLKOUT3_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {122.88} \
   CONFIG.CLKOUT3_REQUESTED_PHASE {0} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLKOUT4_DRIVES {BUFG} \
   CONFIG.CLKOUT5_DRIVES {BUFG} \
   CONFIG.CLKOUT6_DRIVES {BUFG} \
   CONFIG.CLKOUT7_DRIVES {BUFG} \
   CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {80} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {8} \
   CONFIG.MMCM_CLKOUT2_PHASE {0.000} \
   CONFIG.MMCM_COMPENSATION {ZHOLD} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {3} \
   CONFIG.PRIMITIVE {MMCM} \
   CONFIG.PRIM_IN_FREQ {122.88} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
 ] $clk_wiz_0

  # Create instance: clk_wiz_1, and set properties
  set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_1 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {81.38} \
   CONFIG.CLKOUT1_JITTER {237.724} \
   CONFIG.CLKOUT1_PHASE_ERROR {111.288} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {10} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {15.625} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {96.000} \
   CONFIG.MMCM_DIVCLK_DIVIDE {2} \
   CONFIG.PRIM_IN_FREQ {122.88} \
   CONFIG.PRIM_SOURCE {No_buffer} \
 ] $clk_wiz_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {xor} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_xorgate.png} \
 ] $util_reduced_logic_0

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create port connections
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clock_122_out] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins clk_wiz_1/clk_in1]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clock_12_out] [get_bd_pins clk_wiz_0/clk_out2]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins clock_122_out_delayed] [get_bd_pins clk_wiz_0/clk_out3]
  connect_bd_net -net clk_wiz_1_clk_out1 [get_bd_pins clk_wiz_1/clk_out1] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net clock_122_in_n_1 [get_bd_pins clock_122_in_n] [get_bd_pins clk_wiz_0/clk_in1_n]
  connect_bd_net -net clock_122_in_p_1 [get_bd_pins clock_122_in_p] [get_bd_pins clk_wiz_0/clk_in1_p]
  connect_bd_net -net ref_in_10_1 [get_bd_pins ref_in_10] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins pll_cr] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins clk_wiz_0/reset] [get_bd_pins clk_wiz_1/reset] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: audio_codec
proc create_hier_cell_audio_codec { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_audio_codec() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 LR_Spkr_data

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 RX_Audio_Data


  # Create pins
  create_bd_pin -dir O -type clk BCLK
  create_bd_pin -dir I -from 31 -to 0 CodecConfig
  create_bd_pin -dir O -type clk LRCLK
  create_bd_pin -dir O MCLK
  create_bd_pin -dir I -type rst arstn
  create_bd_pin -dir I -type clk clk1
  create_bd_pin -dir I cw_key
  create_bd_pin -dir O cw_ptt
  create_bd_pin -dir I i2srxd
  create_bd_pin -dir O i2stxd
  create_bd_pin -dir I -from 31 -to 0 keyer_config

  # Create instance: I2S_rcv_0, and set properties
  set block_name I2S_rcv
  set block_cell_name I2S_rcv_0
  if { [catch {set I2S_rcv_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_rcv_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: I2S_xmit_0, and set properties
  set block_name I2S_xmit
  set block_cell_name I2S_xmit_0
  if { [catch {set I2S_xmit_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_xmit_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_adder_0, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_0
  if { [catch {set axis_adder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_SIGNED {TRUE} \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_adder_0

  # Create instance: axis_adder_1, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_1
  if { [catch {set axis_adder_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_SIGNED {TRUE} \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_adder_1

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {1} \
   CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {1} \
   CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_1

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]

  # Create instance: axis_constant_2, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_2
  if { [catch {set axis_constant_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_constant_2

  # Create instance: axis_constant_3, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_3
  if { [catch {set axis_constant_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_constant_3

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_dwidth_converter_1

  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {2} \
   CONFIG.TDATA_REMAP {16'b0000000000000000,tdata[15:0]} \
 ] $axis_subset_converter_1

  # Create instance: axis_subset_converter_2, and set properties
  set axis_subset_converter_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_2 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {2} \
   CONFIG.TDATA_REMAP {16'b0000000000000000,tdata[15:0]} \
 ] $axis_subset_converter_2

  # Create instance: axis_subset_converter_3, and set properties
  set axis_subset_converter_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_3 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
   CONFIG.TDATA_REMAP {tdata[39:24],tdata[15:0]} \
 ] $axis_subset_converter_3

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Byte_Size {9} \
   CONFIG.Coe_File {../../../../../../../sources/coefficientfiles/cwkeyershape_240points.coe} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_A {Always_Enabled} \
   CONFIG.Fill_Remaining_Memory_Locations {true} \
   CONFIG.Load_Init_File {true} \
   CONFIG.Memory_Type {Single_Port_ROM} \
   CONFIG.Port_A_Write_Rate {0} \
   CONFIG.Read_Width_A {16} \
   CONFIG.Read_Width_B {16} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {true} \
   CONFIG.Remaining_Memory_Locations {7FFF} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Write_Depth_A {256} \
   CONFIG.Write_Width_A {16} \
   CONFIG.Write_Width_B {16} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.FlowControl {Blocking} \
   CONFIG.MinimumLatency {9} \
   CONFIG.OutputWidth {18} \
   CONFIG.RoundMode {Truncate} \
 ] $cmpy_0

  # Create instance: cmpy_1, and set properties
  set cmpy_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_1 ]
  set_property -dict [ list \
   CONFIG.BPortWidth {18} \
   CONFIG.FlowControl {Blocking} \
   CONFIG.MinimumLatency {9} \
   CONFIG.OutputWidth {20} \
 ] $cmpy_1

  # Create instance: cw_key_ramp_0, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_0
  if { [catch {set cw_key_ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {0.048} \
   CONFIG.Frequency_Resolution {1} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {14} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Sine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {16} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {96} \
 ] $dds_compiler_0

  # Create instance: i2s_clk_lrclk_gen_0, and set properties
  set block_name i2s_clk_lrclk_gen
  set block_cell_name i2s_clk_lrclk_gen_0
  if { [catch {set i2s_clk_lrclk_gen_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $i2s_clk_lrclk_gen_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {1} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_2

  # Create instance: xlslice_keyerdelay, and set properties
  set xlslice_keyerdelay [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerdelay ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_keyerdelay

  # Create instance: xlslice_keyeren, and set properties
  set xlslice_keyeren [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyeren ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_keyeren

  # Create instance: xlslice_keyerhang, and set properties
  set xlslice_keyerhang [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerhang ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {10} \
 ] $xlslice_keyerhang

  # Create interface connections
  connect_bd_intf_net -intf_net I2S_rcv_0_mrecv_axis [get_bd_intf_pins I2S_rcv_0/mrecv_axis] [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net LR_Spkr_data_1 [get_bd_intf_pins LR_Spkr_data] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_adder_0_m_axis [get_bd_intf_pins axis_adder_0/m_axis] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_adder_1_m_axis [get_bd_intf_pins axis_adder_1/m_axis] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M01_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins I2S_xmit_0/sxmit_axis] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_constant_2_m_axis [get_bd_intf_pins axis_constant_2/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_constant_3_m_axis [get_bd_intf_pins axis_constant_3/m_axis] [get_bd_intf_pins axis_subset_converter_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_broadcaster_0/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins RX_Audio_Data] [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins axis_subset_converter_1/M_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_subset_converter_2_M_AXIS [get_bd_intf_pins axis_subset_converter_2/M_AXIS] [get_bd_intf_pins cmpy_1/S_AXIS_A]
  connect_bd_intf_net -intf_net axis_subset_converter_3_M_AXIS [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins axis_subset_converter_3/M_AXIS]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins cmpy_0/M_AXIS_DOUT] [get_bd_intf_pins cmpy_1/S_AXIS_B]
  connect_bd_intf_net -intf_net cmpy_1_M_AXIS_DOUT [get_bd_intf_pins axis_subset_converter_3/S_AXIS] [get_bd_intf_pins cmpy_1/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net cw_key_ramp_0_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins cw_key_ramp_0/m_axis]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_subset_converter_1/S_AXIS] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net CodecConfig_1 [get_bd_pins CodecConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net I2S_xmit_0_outbit [get_bd_pins i2stxd] [get_bd_pins I2S_xmit_0/outbit]
  connect_bd_net -net Net3 [get_bd_pins MCLK] [get_bd_pins clk1] [get_bd_pins I2S_rcv_0/aclk] [get_bd_pins I2S_xmit_0/aclk] [get_bd_pins axis_adder_0/aclk] [get_bd_pins axis_adder_1/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_constant_2/aclk] [get_bd_pins axis_constant_3/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins axis_subset_converter_2/aclk] [get_bd_pins axis_subset_converter_3/aclk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins cmpy_0/aclk] [get_bd_pins cmpy_1/aclk] [get_bd_pins cw_key_ramp_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins i2s_clk_lrclk_gen_0/CLK_IN]
  connect_bd_net -net arstn_1 [get_bd_pins arstn] [get_bd_pins I2S_rcv_0/resetn] [get_bd_pins I2S_xmit_0/resetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins axis_subset_converter_1/aresetn] [get_bd_pins axis_subset_converter_2/aresetn] [get_bd_pins axis_subset_converter_3/aresetn] [get_bd_pins cw_key_ramp_0/resetn] [get_bd_pins i2s_clk_lrclk_gen_0/resetn]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins cw_key_ramp_0/bram_data]
  connect_bd_net -net cw_key_1 [get_bd_pins cw_key] [get_bd_pins cw_key_ramp_0/key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT [get_bd_pins cw_ptt] [get_bd_pins cw_key_ramp_0/CW_PTT]
  connect_bd_net -net cw_key_ramp_0_bram_addr [get_bd_pins cw_key_ramp_0/bram_addr] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net i2s_clk_lrclk_gen_0_BCLK [get_bd_pins BCLK] [get_bd_pins I2S_rcv_0/BCLK] [get_bd_pins i2s_clk_lrclk_gen_0/BCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Bfall [get_bd_pins I2S_rcv_0/Bfall] [get_bd_pins I2S_xmit_0/CBfall] [get_bd_pins i2s_clk_lrclk_gen_0/Bfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Brise [get_bd_pins I2S_rcv_0/Brise] [get_bd_pins I2S_xmit_0/CBrise] [get_bd_pins i2s_clk_lrclk_gen_0/Brise]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRCLK [get_bd_pins LRCLK] [get_bd_pins I2S_rcv_0/LRCLK] [get_bd_pins I2S_xmit_0/lrclk] [get_bd_pins i2s_clk_lrclk_gen_0/LRCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRfall [get_bd_pins I2S_rcv_0/LRfall] [get_bd_pins i2s_clk_lrclk_gen_0/LRfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRrise [get_bd_pins I2S_rcv_0/LRrise] [get_bd_pins i2s_clk_lrclk_gen_0/LRrise]
  connect_bd_net -net is2rxd_1 [get_bd_pins i2srxd] [get_bd_pins I2S_rcv_0/din]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins xlslice_keyerdelay/Din] [get_bd_pins xlslice_keyeren/Din] [get_bd_pins xlslice_keyerhang/Din]
  connect_bd_net -net xlconstant_0_dout1 [get_bd_pins cw_key_ramp_0/protocol_2] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins axis_constant_3/cfg_data] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins blk_mem_gen_0/addra] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins axis_constant_2/cfg_data] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_keyerdelay_Dout [get_bd_pins cw_key_ramp_0/delay_time] [get_bd_pins xlslice_keyerdelay/Dout]
  connect_bd_net -net xlslice_keyeren_Dout [get_bd_pins cw_key_ramp_0/keyer_enable] [get_bd_pins xlslice_keyeren/Dout]
  connect_bd_net -net xlslice_keyerhang_Dout [get_bd_pins cw_key_ramp_0/hang_time] [get_bd_pins xlslice_keyerhang/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Transmitter
proc create_hier_cell_Transmitter { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Transmitter() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_In


  # Create pins
  create_bd_pin -dir O CWSampleSelect
  create_bd_pin -dir I -from 31 -to 0 TXConfig
  create_bd_pin -dir O -from 15 -to 0 TXDACData
  create_bd_pin -dir I -from 31 -to 0 TXLOTune
  create_bd_pin -dir O -from 15 -to 0 TXMagnitude
  create_bd_pin -dir O -from 15 -to 0 TXSamplesToRX
  create_bd_pin -dir I TXStrobe
  create_bd_pin -dir I -from 31 -to 0 TXTestFreq
  create_bd_pin -dir I TX_ENABLE
  create_bd_pin -dir I -type clk clk2
  create_bd_pin -dir I cw_key_down
  create_bd_pin -dir O cw_ptt1
  create_bd_pin -dir I -from 31 -to 0 keyer_config
  create_bd_pin -dir I -type rst resetn1

  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $D_register_2

  # Create instance: IQ_Modulation_Select
  create_hier_cell_IQ_Modulation_Select $hier_obj IQ_Modulation_Select

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[47:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:0]} \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_broadcaster_cic_path_split, and set properties
  set axis_broadcaster_cic_path_split [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_cic_path_split ]
  set_property -dict [ list \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_cic_path_split

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {3} \
 ] $axis_combiner_0

  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_fir_to_IQ, and set properties
  set axis_dwidth_converter_fir_to_IQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_fir_to_IQ ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {3} \
 ] $axis_dwidth_converter_fir_to_IQ

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Fixed_Or_Initial_Rate {80} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {false} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {1.536} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {80} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {23} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {80} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Fixed_Or_Initial_Rate {80} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {false} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {1.536} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {80} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {23} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {80} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.APortWidth {23} \
   CONFIG.BPortWidth {16} \
   CONFIG.FlowControl {NonBlocking} \
   CONFIG.MinimumLatency {6} \
   CONFIG.OutputWidth {20} \
   CONFIG.RoundMode {Truncate} \
 ] $cmpy_0

  # Create instance: cordic_0, and set properties
  set cordic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cordic:6.0 cordic_0 ]
  set_property -dict [ list \
   CONFIG.Compensation_Scaling {No_Scale_Compensation} \
   CONFIG.Data_Format {SignedFraction} \
   CONFIG.Functional_Selection {Translate} \
   CONFIG.Input_Width {23} \
   CONFIG.Output_Width {16} \
   CONFIG.flow_control {NonBlocking} \
 ] $cordic_0

  # Create instance: cvt_offset_binary_0, and set properties
  set block_name cvt_offset_binary
  set block_cell_name cvt_offset_binary_0
  if { [catch {set cvt_offset_binary_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cvt_offset_binary_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_txfreq, and set properties
  set dds_compiler_txfreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_txfreq ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.DSP48_Use {Minimal} \
   CONFIG.Frequency_Resolution {0.05} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {96} \
 ] $dds_compiler_txfreq

  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [ list \
   CONFIG.BestPrecision {true} \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe}\
   CONFIG.Coefficient_Fractional_Bits {24} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {22} \
   CONFIG.ColumnConfig {1} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {1} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Interpolation} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Interpolation_Rate {8} \
   CONFIG.M_DATA_Has_TREADY {true} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Number_Channels {2} \
   CONFIG.Output_Rounding_Mode {Symmetric_Rounding_to_Zero} \
   CONFIG.Output_Width {20} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_TUSER {Not_Required} \
   CONFIG.Sample_Frequency {0.192} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $fir_compiler_0

  # Create instance: mult_gen_0, and set properties
  set mult_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mult_gen:12.0 mult_gen_0 ]
  set_property -dict [ list \
   CONFIG.MultType {Parallel_Multiplier} \
   CONFIG.Multiplier_Construction {Use_Mults} \
   CONFIG.OptGoal {Speed} \
   CONFIG.OutputWidthHigh {31} \
   CONFIG.OutputWidthLow {16} \
   CONFIG.PipeStages {4} \
   CONFIG.PortAWidth {20} \
   CONFIG.PortBType {Unsigned} \
   CONFIG.Use_Custom_Output_Width {true} \
 ] $mult_gen_0

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $regmux_2_1_0

  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_16x0, and set properties
  set xlconstant_16x0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16x0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16x0

  # Create instance: xlconstant_proto1, and set properties
  set xlconstant_proto1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {320} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_proto1

  # Create instance: xlconstant_proto2, and set properties
  set xlconstant_proto2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto2 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {80} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_proto2

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {48} \
   CONFIG.DOUT_WIDTH {20} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {18} \
 ] $xlslice_3

  # Create instance: xlslice_rate, and set properties
  set xlslice_rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_rate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_rate

  # Create interface connections
  connect_bd_intf_net -intf_net IQ_Modulation_Select_output_axis [get_bd_intf_pins IQ_Modulation_Select/output_axis] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net TX_IQ_In_1 [get_bd_intf_pins TX_IQ_In] [get_bd_intf_pins IQ_Modulation_Select/TX_IQ_in]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M00_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M01_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cordic_0/S_AXIS_CARTESIAN]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_A]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_txfreq/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_fir_to_IQ_M_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/M_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net dds_compiler_txfreq_M_AXIS_DATA [get_bd_intf_pins cmpy_0/S_AXIS_B] [get_bd_intf_pins dds_compiler_txfreq/M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net D_register_1_dout [get_bd_pins TXMagnitude] [get_bd_pins D_register_1/dout]
  connect_bd_net -net D_register_2_dout [get_bd_pins TXSamplesToRX] [get_bd_pins D_register_2/dout]
  connect_bd_net -net IQ_Modulation_Select_TX_OPENABLE [get_bd_pins IQ_Modulation_Select/TX_OUTPUTENABLE] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net Net5 [get_bd_pins clk2] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins IQ_Modulation_Select/clk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_broadcaster_cic_path_split/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins cordic_0/aclk] [get_bd_pins cvt_offset_binary_0/clk] [get_bd_pins dds_compiler_txfreq/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins mult_gen_0/CLK] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_2_1_1/aclk]
  connect_bd_net -net TXConfig_1 [get_bd_pins TXConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_rate/Din]
  connect_bd_net -net TXStrobe_1 [get_bd_pins TXStrobe] [get_bd_pins IQ_Modulation_Select/TX_Strobe]
  connect_bd_net -net TX_ENABLE_1 [get_bd_pins TX_ENABLE] [get_bd_pins IQ_Modulation_Select/TX_ENABLE]
  connect_bd_net -net TX_LO_Tune_1 [get_bd_pins TXLOTune] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_pins TXTestFreq] [get_bd_pins IQ_Modulation_Select/TXTestFreq]
  connect_bd_net -net cmpy_0_m_axis_dout_tdata [get_bd_pins cmpy_0/m_axis_dout_tdata] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net cordic_0_m_axis_dout_tdata [get_bd_pins cordic_0/m_axis_dout_tdata] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net cvt_offset_binary_0_dout [get_bd_pins TXDACData] [get_bd_pins cvt_offset_binary_0/dout]
  connect_bd_net -net cw_key_down_1 [get_bd_pins cw_key_down] [get_bd_pins IQ_Modulation_Select/cw_key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT1 [get_bd_pins cw_ptt1] [get_bd_pins IQ_Modulation_Select/cw_ptt]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins IQ_Modulation_Select/keyer_config]
  connect_bd_net -net mult_gen_0_P [get_bd_pins D_register_2/din] [get_bd_pins mult_gen_0/P] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins cvt_offset_binary_0/din] [get_bd_pins regmux_2_1_0/dout]
  connect_bd_net -net regmux_2_1_1_dout1 [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins regmux_2_1_1/dout]
  connect_bd_net -net resetn_2 [get_bd_pins resetn1] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins IQ_Modulation_Select/resetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_broadcaster_cic_path_split/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aresetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins dds_compiler_txfreq/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_2_1_1/resetn]
  connect_bd_net -net util_reduced_logic_0_Res1 [get_bd_pins CWSampleSelect] [get_bd_pins IQ_Modulation_Select/CWSampleSelect]
  connect_bd_net -net xlconstant_16x0_dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlconstant_16x0/dout]
  connect_bd_net -net xlconstant_proto1_dout [get_bd_pins regmux_2_1_1/din0] [get_bd_pins xlconstant_proto1/dout]
  connect_bd_net -net xlconstant_proto2_dout [get_bd_pins regmux_2_1_1/din1] [get_bd_pins xlconstant_proto2/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins IQ_Modulation_Select/Modulation_Setup] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins D_register_1/din] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins mult_gen_0/A] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins mult_gen_0/B] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_rate_Dout [get_bd_pins IQ_Modulation_Select/protocol_2] [get_bd_pins regmux_2_1_1/sel] [get_bd_pins xlslice_rate/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver
proc create_hier_cell_Receiver { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Receiver() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_DDC9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_1


  # Create pins
  create_bd_pin -dir I -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I clock_122_delayed
  create_bd_pin -dir I -type rst rstn1
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: AXIL_ConfigReg_256_RX_0, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_RX_0
  if { [catch {set AXIL_ConfigReg_256_RX_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_RX_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ConfigReg_256_RX_1, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_RX_1
  if { [catch {set AXIL_ConfigReg_256_RX_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_RX_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LTC2208_derandomise_0, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_0
  if { [catch {set LTC2208_derandomise_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LTC2208_derandomise_1, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_1
  if { [catch {set LTC2208_derandomise_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Unit_Circle} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.05} \
   CONFIG.Has_ACLKEN {false} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Sine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {94} \
 ] $dds_compiler_0

  # Create instance: dualDDC10
  create_hier_cell_dualDDC10 $hier_obj dualDDC10

  # Create instance: dualDDC32
  create_hier_cell_dualDDC32 $hier_obj dualDDC32

  # Create instance: dualDDC54
  create_hier_cell_dualDDC54 $hier_obj dualDDC54

  # Create instance: dualDDC76
  create_hier_cell_dualDDC76 $hier_obj dualDDC76

  # Create instance: dualDDC98
  create_hier_cell_dualDDC98 $hier_obj dualDDC98

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_DDC0] [get_bd_intf_pins dualDDC10/m_axis_0]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_DDC1] [get_bd_intf_pins dualDDC10/m_axis_1]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins s_axi_0] [get_bd_intf_pins AXIL_ConfigReg_256_RX_0/s_axi]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins s_axi_1] [get_bd_intf_pins AXIL_ConfigReg_256_RX_1/s_axi]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_0 [get_bd_intf_pins m_axis_DDC2] [get_bd_intf_pins dualDDC32/m_axis_0]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_1 [get_bd_intf_pins m_axis_DDC3] [get_bd_intf_pins dualDDC32/m_axis_1]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_2 [get_bd_intf_pins m_axis_DDC6] [get_bd_intf_pins dualDDC76/m_axis_0]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_3 [get_bd_intf_pins m_axis_DDC7] [get_bd_intf_pins dualDDC76/m_axis_1]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_0 [get_bd_intf_pins m_axis_DDC4] [get_bd_intf_pins dualDDC54/m_axis_0]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_1 [get_bd_intf_pins m_axis_DDC5] [get_bd_intf_pins dualDDC54/m_axis_1]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_2 [get_bd_intf_pins m_axis_DDC8] [get_bd_intf_pins dualDDC98/m_axis_0]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_3 [get_bd_intf_pins m_axis_DDC9] [get_bd_intf_pins dualDDC98/m_axis_1]

  # Create port connections
  connect_bd_net -net ADC1_2 [get_bd_pins LTC2208_derandomise_0/dout] [get_bd_pins dualDDC10/ADC1] [get_bd_pins dualDDC32/ADC1] [get_bd_pins dualDDC54/ADC1] [get_bd_pins dualDDC76/ADC1] [get_bd_pins dualDDC98/ADC1]
  connect_bd_net -net ADC2_2 [get_bd_pins LTC2208_derandomise_1/dout] [get_bd_pins dualDDC10/ADC2] [get_bd_pins dualDDC32/ADC2] [get_bd_pins dualDDC54/ADC2] [get_bd_pins dualDDC76/ADC2] [get_bd_pins dualDDC98/ADC2]
  connect_bd_net -net ARC_Randomise_1 [get_bd_pins ADC_Randomise] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg0 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg0] [get_bd_pins dualDDC10/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg1 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg1] [get_bd_pins dualDDC10/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg2 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg2] [get_bd_pins dualDDC10/DualDDCConfig]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg3 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg3] [get_bd_pins dualDDC32/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg4 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg4] [get_bd_pins dualDDC32/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg5 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg5] [get_bd_pins dualDDC32/DualDDCConfig]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg6 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg6] [get_bd_pins dualDDC54/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg7 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg7] [get_bd_pins dualDDC54/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg0 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg0] [get_bd_pins dualDDC54/DualDDCConfig]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg1 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg1] [get_bd_pins dualDDC76/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg2 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg2] [get_bd_pins dualDDC76/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg3 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg3] [get_bd_pins dualDDC76/DualDDCConfig]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg4 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg4] [get_bd_pins dualDDC98/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg5 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg5] [get_bd_pins dualDDC98/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg6 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg6] [get_bd_pins dualDDC98/DualDDCConfig]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg7 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg7] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net Net [get_bd_pins clock_122_delayed] [get_bd_pins LTC2208_derandomise_0/clk] [get_bd_pins LTC2208_derandomise_1/clk]
  connect_bd_net -net RX_Test_1 [get_bd_pins dds_compiler_0/m_axis_data_tdata] [get_bd_pins dualDDC10/RX_Test] [get_bd_pins dualDDC32/RX_Test] [get_bd_pins dualDDC54/RX_Test] [get_bd_pins dualDDC76/RX_Test] [get_bd_pins dualDDC98/RX_Test]
  connect_bd_net -net TX_samples_1 [get_bd_pins tx_samples] [get_bd_pins dualDDC10/TX_samples] [get_bd_pins dualDDC32/TX_samples] [get_bd_pins dualDDC54/TX_samples] [get_bd_pins dualDDC76/TX_samples] [get_bd_pins dualDDC98/TX_samples]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins AXIL_ConfigReg_256_RX_0/aclk] [get_bd_pins AXIL_ConfigReg_256_RX_1/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins dualDDC10/aclk] [get_bd_pins dualDDC32/aclk] [get_bd_pins dualDDC54/aclk] [get_bd_pins dualDDC76/aclk] [get_bd_pins dualDDC98/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins LTC2208_derandomise_0/din]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins LTC2208_derandomise_1/din]
  connect_bd_net -net rstn1_1 [get_bd_pins rstn1] [get_bd_pins AXIL_ConfigReg_256_RX_0/aresetn] [get_bd_pins AXIL_ConfigReg_256_RX_1/aresetn] [get_bd_pins dds_compiler_0/aresetn] [get_bd_pins dualDDC10/aresetn] [get_bd_pins dualDDC32/aresetn] [get_bd_pins dualDDC54/aresetn] [get_bd_pins dualDDC76/aresetn] [get_bd_pins dualDDC98/aresetn]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins LTC2208_derandomise_0/rand_sel] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins LTC2208_derandomise_1/rand_sel] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RF_interfaces
proc create_hier_cell_RF_interfaces { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_RF_interfaces() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_alex


  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir I BUFF_Alex_Pin1
  set_property USER_COMMENTS.comment_29 "Unused Alex input pins" [get_bd_pins /RF_interfaces/BUFF_Alex_Pin1]
  create_bd_pin -dir I BUFF_Alex_Pin8
  create_bd_pin -dir O -from 0 -to 0 BUF_Out_FPGA
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir O CW_Key_Down
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Clk
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Data
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_LE
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Mode
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O -type clk RF_SPI_CK
  create_bd_pin -dir O RF_SPI_DATA
  create_bd_pin -dir O RF_SPI_RX_LOAD
  create_bd_pin -dir O RF_SPI_TX_LOAD
  create_bd_pin -dir O -from 0 -to 0 TXRX_RELAY
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I aclk
  create_bd_pin -dir I -type clk codec_clk
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out

  # Create instance: AXILite_Alex_SPI_0, and set properties
  set block_name AXILite_Alex_SPI
  set block_cell_name AXILite_Alex_SPI_0
  if { [catch {set AXILite_Alex_SPI_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXILite_Alex_SPI_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AttenDrivers
  create_hier_cell_AttenDrivers $hier_obj AttenDrivers

  # Create instance: Strobes
  create_hier_cell_Strobes $hier_obj Strobes

  # Create instance: debounce
  create_hier_cell_debounce $hier_obj debounce

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconstant_drive0, and set properties
  set xlconstant_drive0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_drive0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_drive0

  # Create instance: xlconstant_drive1, and set properties
  set xlconstant_drive1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_drive1 ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins s_axi_alex] [get_bd_intf_pins AXILite_Alex_SPI_0/s_axi]

  # Create port connections
  connect_bd_net -net AXILite_Alex_SPI_0_Rx_load_strobe [get_bd_pins RF_SPI_RX_LOAD] [get_bd_pins AXILite_Alex_SPI_0/Rx_load_strobe]
  connect_bd_net -net AXILite_Alex_SPI_0_SPI_ck [get_bd_pins RF_SPI_CK] [get_bd_pins AXILite_Alex_SPI_0/SPI_ck]
  connect_bd_net -net AXILite_Alex_SPI_0_SPI_data [get_bd_pins RF_SPI_DATA] [get_bd_pins AXILite_Alex_SPI_0/SPI_data]
  connect_bd_net -net AXILite_Alex_SPI_0_Tx_load_strobe [get_bd_pins RF_SPI_TX_LOAD] [get_bd_pins AXILite_Alex_SPI_0/Tx_load_strobe]
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins AttenDrivers/ADC_Ctrl]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins AttenDrivers/DAC_Ctrl]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins TX_DAC_PWM] [get_bd_pins AttenDrivers/TX_DAC_PWM]
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins Strobes/RF_GPIO]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins ADC1_ATTEN_CLK] [get_bd_pins AttenDrivers/ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins ADC1_ATTEN_DAT] [get_bd_pins AttenDrivers/ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins ADC1_ATTEN_LE] [get_bd_pins AttenDrivers/ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins ADC2_ATTEN_CLK] [get_bd_pins AttenDrivers/ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins ADC2_ATTEN_DAT] [get_bd_pins AttenDrivers/ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins ADC2_ATTEN_LE] [get_bd_pins AttenDrivers/ADC2_ATTEN_LE]
  connect_bd_net -net Strobes_ADC_Randomise [get_bd_pins ADC_Randomise] [get_bd_pins Strobes/ADC_Randomise]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins AXILite_Alex_SPI_0/aclk]
  connect_bd_net -net clk_1 [get_bd_pins codec_clk] [get_bd_pins AttenDrivers/clk] [get_bd_pins debounce/clk]
  connect_bd_net -net debounce_CW_Key_Down [get_bd_pins CW_Key_Down] [get_bd_pins debounce/CW_Key_Down]
  connect_bd_net -net debounce_status_out [get_bd_pins status_out] [get_bd_pins debounce/status_out]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins Strobes/keyer_PTT]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins Dac_Atten] [get_bd_pins AttenDrivers/Dac_Atten]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins AXILite_Alex_SPI_0/aresetn] [get_bd_pins AttenDrivers/rstn] [get_bd_pins debounce/rstn]
  connect_bd_net -net status_in_1 [get_bd_pins status_in] [get_bd_pins debounce/status_in]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins MOX_strobe] [get_bd_pins AttenDrivers/tx_strobe] [get_bd_pins Strobes/MOX_strobe]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins CTRL_TRSW] [get_bd_pins Strobes/CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins AXILite_Alex_SPI_0/TX_Strobe] [get_bd_pins Strobes/TXRX_RELAY] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins TXRX_RELAY] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins Dac_Atten_LE] [get_bd_pins xlconstant_drive1/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins BUF_Out_FPGA] [get_bd_pins Dac_Atten_Clk] [get_bd_pins Dac_Atten_Data] [get_bd_pins Dac_Atten_Mode] [get_bd_pins xlconstant_drive0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins GPIO_OUT] [get_bd_pins Strobes/GPIO_OUT]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins ATU_TUNE] [get_bd_pins Strobes/ATU_TUNE]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PCIe
proc create_hier_cell_PCIe { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_PCIe() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M01_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M03_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M04_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M05_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M06_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_Alex

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_full_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 PROM_SPI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 diff_clock_rtl_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 iic_rtl_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0


  # Create pins
  create_bd_pin -dir I ADC1_Overrange
  create_bd_pin -dir I ADC2_Overrange
  create_bd_pin -dir O -from 31 -to 0 ADCCtrlData
  create_bd_pin -dir O -from 0 -to 0 ADC_CLK
  create_bd_pin -dir I ADC_MISO
  create_bd_pin -dir O -from 0 -to 0 ADC_MOSI
  create_bd_pin -dir O -from 31 -to 0 CodecConfigData
  create_bd_pin -dir O -from 31 -to 0 DACCtrlData
  create_bd_pin -dir O -from 0 -to 0 FPGA_CM4_EN
  create_bd_pin -dir O -from 31 -to 0 KeyerConfigData
  create_bd_pin -dir O -from 15 -to 0 LEDDrivers
  create_bd_pin -dir O -from 0 -to 0 PCIECLKREQN
  create_bd_pin -dir O -from 0 -to 0 PCI_LINK_LED
  create_bd_pin -dir I PCIe_T_SMBCLK
  create_bd_pin -dir I PCIe_T_SMBDAT
  set_property USER_COMMENTS.comment_28 "unused pins for PCIe bus configuration" [get_bd_pins /PCIe/PCIe_T_SMBDAT]
  create_bd_pin -dir O -from 31 -to 0 RFGPIOData
  create_bd_pin -dir I -from 9 -to 0 Status_data
  create_bd_pin -dir O -from 31 -to 0 TXConfigData
  create_bd_pin -dir O -from 31 -to 0 TXFreqData
  create_bd_pin -dir O -from 31 -to 0 TXTestFreqData
  create_bd_pin -dir I TX_ENABLE
  create_bd_pin -dir O -from 0 -to 0 aresetn12
  create_bd_pin -dir O axi_aclk_125
  create_bd_pin -dir O axi_aresetn_125
  create_bd_pin -dir O -from 4 -to 0 axi_resetn
  create_bd_pin -dir I clk12
  create_bd_pin -dir I clk_122
  create_bd_pin -dir O -from 0 -to 0 nADC_CS
  create_bd_pin -dir I -type rst reset_rtl_0

  # Create instance: AXIL_ConfigReg_256_2, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_2
  if { [catch {set AXIL_ConfigReg_256_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ConfigReg_64_0, and set properties
  set block_name AXIL_ConfigReg_64
  set block_cell_name AXIL_ConfigReg_64_0
  if { [catch {set AXIL_ConfigReg_64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ReadReg_64_0, and set properties
  set block_name AXIL_ReadReg_64
  set block_cell_name AXIL_ReadReg_64_0
  if { [catch {set AXIL_ReadReg_64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ReadReg_64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXI_ADC_overrange_re_0, and set properties
  set block_name AXI_ADC_overrange_reader
  set block_cell_name AXI_ADC_overrange_re_0
  if { [catch {set AXI_ADC_overrange_re_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_ADC_overrange_re_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXI_SPI_ADC_0, and set properties
  set block_name AXI_SPI_ADC
  set block_cell_name AXI_SPI_ADC_0
  if { [catch {set AXI_SPI_ADC_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_SPI_ADC_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $D_register_0

  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {1} \
 ] $D_register_1

  # Create instance: Double_D_register_syncareset, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_syncareset
  if { [catch {set Double_D_register_syncareset [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_syncareset eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {1} \
 ] $Double_D_register_syncareset

  # Create instance: Double_D_register_syncareset1, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_syncareset1
  if { [catch {set Double_D_register_syncareset1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_syncareset1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {1} \
 ] $Double_D_register_syncareset1

  # Create instance: Usr_Reg_Access_0, and set properties
  set block_name Usr_Reg_Access
  set block_cell_name Usr_Reg_Access_0
  if { [catch {set Usr_Reg_Access_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Usr_Reg_Access_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_iic_0, and set properties
  set axi_iic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.1 axi_iic_0 ]
  set_property -dict [ list \
   CONFIG.IIC_FREQ_KHZ {400} \
 ] $axi_iic_0

  # Create instance: axi_interconnect_122, and set properties
  set axi_interconnect_122 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_122 ]
  set_property -dict [ list \
   CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
   CONFIG.NUM_MI {8} \
 ] $axi_interconnect_122

  # Create instance: axi_interconnect_lite, and set properties
  set axi_interconnect_lite [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_lite ]
  set_property -dict [ list \
   CONFIG.M01_HAS_DATA_FIFO {1} \
   CONFIG.M01_HAS_REGSLICE {3} \
 ] $axi_interconnect_lite

  # Create instance: axi_interconnect_lite_125, and set properties
  set axi_interconnect_lite_125 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_lite_125 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {7} \
 ] $axi_interconnect_lite_125

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list \
   CONFIG.C_FIFO_DEPTH {256} \
   CONFIG.C_SCK_RATIO {2} \
   CONFIG.C_SHARED_STARTUP {0} \
   CONFIG.C_SPI_MEMORY {3} \
   CONFIG.C_SPI_MEM_ADDR_BITS {24} \
   CONFIG.C_SPI_MODE {2} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_USE_STARTUP {1} \
   CONFIG.C_USE_STARTUP_INT {1} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_0

  # Create instance: pci_clk_buf, and set properties
  set pci_clk_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 pci_clk_buf ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $pci_clk_buf

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xadc_wiz_0, and set properties
  set xadc_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xadc_wiz:3.3 xadc_wiz_0 ]
  set_property -dict [ list \
   CONFIG.ADC_OFFSET_AND_GAIN_CALIBRATION {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP12_VAUXN12 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP13_VAUXN13 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP5_VAUXN5 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP6_VAUXN6 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP7_VAUXN7 {true} \
   CONFIG.CHANNEL_ENABLE_VP_VN {true} \
   CONFIG.ENABLE_RESET {false} \
   CONFIG.EXTERNAL_MUX_CHANNEL {VP_VN} \
   CONFIG.INTERFACE_SELECTION {Enable_AXI} \
   CONFIG.OT_ALARM {false} \
   CONFIG.SEQUENCER_MODE {Continuous} \
   CONFIG.SINGLE_CHANNEL_SELECTION {TEMPERATURE} \
   CONFIG.USER_TEMP_ALARM {false} \
   CONFIG.VCCAUX_ALARM {false} \
   CONFIG.VCCINT_ALARM {false} \
   CONFIG.XADC_STARUP_SELECTION {channel_sequencer} \
 ] $xadc_wiz_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9024} \
   CONFIG.PF0_SRIOV_VF_DEVICE_ID {A034} \
   CONFIG.PF1_SRIOV_VF_DEVICE_ID {A134} \
   CONFIG.PF2_DEVICE_ID_mqdma {9224} \
   CONFIG.PF2_SRIOV_VF_DEVICE_ID {A234} \
   CONFIG.PF3_DEVICE_ID_mqdma {9324} \
   CONFIG.PF3_SRIOV_VF_DEVICE_ID {A334} \
   CONFIG.axi_data_width {128_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axisten_freq {125} \
   CONFIG.cfg_mgmt_if {false} \
   CONFIG.pf0_device_id {7024} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_3:2} \
   CONFIG.pf0_msix_cap_table_bir {BAR_3:2} \
   CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axilite_slave {false} \
   CONFIG.xdma_pcie_64bit_en {true} \
   CONFIG.xdma_pcie_prefetchable {true} \
   CONFIG.xdma_rnum_chnl {2} \
   CONFIG.xdma_wnum_chnl {2} \
 ] $xdma_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {10} \
   CONFIG.IN1_WIDTH {21} \
   CONFIG.NUM_PORTS {3} \
 ] $xlconcat_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {5} \
 ] $xlconcat_2

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {21} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]

  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]

  # Create instance: xlconstant_2_pciebusreq, and set properties
  set xlconstant_2_pciebusreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2_pciebusreq ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_2_pciebusreq

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_15

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M00_AXI_0] [get_bd_intf_pins axi_interconnect_122/M00_AXI]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins diff_clock_rtl_0] [get_bd_intf_pins pci_clk_buf/CLK_IN_D]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins iic_rtl_0] [get_bd_intf_pins axi_iic_0/IIC]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins PROM_SPI] [get_bd_intf_pins axi_quad_spi_0/SPI_0]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins M_AXI_Alex] [get_bd_intf_pins axi_interconnect_122/M07_AXI]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins M01_AXI_0] [get_bd_intf_pins axi_interconnect_122/M01_AXI]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins M03_AXI_0] [get_bd_intf_pins axi_interconnect_lite_125/M03_AXI]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins M04_AXI_0] [get_bd_intf_pins axi_interconnect_lite_125/M04_AXI]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins M05_AXI_0] [get_bd_intf_pins axi_interconnect_lite_125/M05_AXI]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins M06_AXI_0] [get_bd_intf_pins axi_interconnect_lite_125/M06_AXI]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins M_AXI_full_0] [get_bd_intf_pins xdma_0/M_AXI]
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_lite/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_iic_0/S_AXI] [get_bd_intf_pins axi_interconnect_122/M03_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins AXI_ADC_overrange_re_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M05_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins AXI_SPI_ADC_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M06_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M02_AXI [get_bd_intf_pins AXIL_ConfigReg_256_2/s_axi] [get_bd_intf_pins axi_interconnect_122/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M04_AXI [get_bd_intf_pins AXIL_ReadReg_64_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M00_AXI [get_bd_intf_pins axi_interconnect_lite_125/M00_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M01_AXI [get_bd_intf_pins axi_interconnect_lite_125/M01_AXI] [get_bd_intf_pins xadc_wiz_0/s_axi_lite]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M02_AXI [get_bd_intf_pins AXIL_ConfigReg_64_0/s_axi] [get_bd_intf_pins axi_interconnect_lite_125/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_M00_AXI [get_bd_intf_pins axi_interconnect_lite/M00_AXI] [get_bd_intf_pins axi_interconnect_lite_125/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_M01_AXI [get_bd_intf_pins axi_interconnect_122/S00_AXI] [get_bd_intf_pins axi_interconnect_lite/M01_AXI]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_pins pcie_7x_mgt_rtl_0] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins axi_aclk_125] [get_bd_pins AXIL_ConfigReg_64_0/aclk] [get_bd_pins axi_interconnect_lite/ACLK] [get_bd_pins axi_interconnect_lite/M00_ACLK] [get_bd_pins axi_interconnect_lite/S00_ACLK] [get_bd_pins axi_interconnect_lite_125/ACLK] [get_bd_pins axi_interconnect_lite_125/M00_ACLK] [get_bd_pins axi_interconnect_lite_125/M01_ACLK] [get_bd_pins axi_interconnect_lite_125/M02_ACLK] [get_bd_pins axi_interconnect_lite_125/M03_ACLK] [get_bd_pins axi_interconnect_lite_125/M04_ACLK] [get_bd_pins axi_interconnect_lite_125/M05_ACLK] [get_bd_pins axi_interconnect_lite_125/M06_ACLK] [get_bd_pins axi_interconnect_lite_125/S00_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins xadc_wiz_0/s_axi_aclk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net ADC1_Overrange_1 [get_bd_pins ADC1_Overrange] [get_bd_pins AXI_ADC_overrange_re_0/overrange1]
  connect_bd_net -net ADC2_Overrange_1 [get_bd_pins ADC2_Overrange] [get_bd_pins AXI_ADC_overrange_re_0/overrange2]
  connect_bd_net -net ADC_MISO_1 [get_bd_pins ADC_MISO] [get_bd_pins AXI_SPI_ADC_0/MISO]
  connect_bd_net -net ARESETN_1 [get_bd_pins axi_aresetn_125] [get_bd_pins AXIL_ConfigReg_64_0/aresetn] [get_bd_pins Double_D_register_syncareset/din] [get_bd_pins Double_D_register_syncareset1/din] [get_bd_pins axi_interconnect_lite/ARESETN] [get_bd_pins axi_interconnect_lite/M00_ARESETN] [get_bd_pins axi_interconnect_lite/S00_ARESETN] [get_bd_pins axi_interconnect_lite_125/ARESETN] [get_bd_pins axi_interconnect_lite_125/M00_ARESETN] [get_bd_pins axi_interconnect_lite_125/M01_ARESETN] [get_bd_pins axi_interconnect_lite_125/M02_ARESETN] [get_bd_pins axi_interconnect_lite_125/M03_ARESETN] [get_bd_pins axi_interconnect_lite_125/M04_ARESETN] [get_bd_pins axi_interconnect_lite_125/M05_ARESETN] [get_bd_pins axi_interconnect_lite_125/M06_ARESETN] [get_bd_pins axi_interconnect_lite_125/S00_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins xadc_wiz_0/s_axi_aresetn] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg0 [get_bd_pins KeyerConfigData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg0]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg1 [get_bd_pins CodecConfigData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg1]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg2 [get_bd_pins TXConfigData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg2]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg3 [get_bd_pins TXFreqData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg3]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg4 [get_bd_pins TXTestFreqData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg4]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg5 [get_bd_pins RFGPIOData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg5]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg6 [get_bd_pins ADCCtrlData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg6]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg7 [get_bd_pins DACCtrlData] [get_bd_pins AXIL_ConfigReg_256_2/config_reg7]
  connect_bd_net -net AXIL_ConfigReg_64_0_config_reg0 [get_bd_pins AXIL_ConfigReg_64_0/config_reg0] [get_bd_pins xlslice_15/Din]
  connect_bd_net -net AXI_SPI_ADC_0_MOSI [get_bd_pins ADC_MOSI] [get_bd_pins AXI_SPI_ADC_0/MOSI]
  connect_bd_net -net AXI_SPI_ADC_0_SCLK [get_bd_pins ADC_CLK] [get_bd_pins AXI_SPI_ADC_0/SCLK]
  connect_bd_net -net AXI_SPI_ADC_0_nCS [get_bd_pins nADC_CS] [get_bd_pins AXI_SPI_ADC_0/nCS]
  connect_bd_net -net D_register_0_dout [get_bd_pins axi_resetn] [get_bd_pins D_register_0/dout]
  connect_bd_net -net Double_D_register_syncareset1_dout [get_bd_pins aresetn12] [get_bd_pins Double_D_register_syncareset1/dout]
  connect_bd_net -net Net2 [get_bd_pins D_register_1/din] [get_bd_pins Double_D_register_syncareset/dout] [get_bd_pins xlconcat_2/In0] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_2/In2] [get_bd_pins xlconcat_2/In3] [get_bd_pins xlconcat_2/In4]
  connect_bd_net -net Net3 [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net Status_data_1 [get_bd_pins Status_data] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net TX_ENABLE_1 [get_bd_pins TX_ENABLE] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net Usr_Reg_Access_0_Usr_Reg_Data [get_bd_pins AXIL_ReadReg_64_0/readdata1] [get_bd_pins Usr_Reg_Access_0/Usr_Reg_Data]
  connect_bd_net -net clk12_1 [get_bd_pins clk12] [get_bd_pins Double_D_register_syncareset1/aclk]
  connect_bd_net -net clk_122_1 [get_bd_pins clk_122] [get_bd_pins AXIL_ConfigReg_256_2/aclk] [get_bd_pins AXIL_ReadReg_64_0/aclk] [get_bd_pins AXI_ADC_overrange_re_0/aclk] [get_bd_pins AXI_SPI_ADC_0/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins Double_D_register_syncareset/aclk] [get_bd_pins axi_iic_0/s_axi_aclk] [get_bd_pins axi_interconnect_122/ACLK] [get_bd_pins axi_interconnect_122/M00_ACLK] [get_bd_pins axi_interconnect_122/M01_ACLK] [get_bd_pins axi_interconnect_122/M02_ACLK] [get_bd_pins axi_interconnect_122/M03_ACLK] [get_bd_pins axi_interconnect_122/M04_ACLK] [get_bd_pins axi_interconnect_122/M05_ACLK] [get_bd_pins axi_interconnect_122/M06_ACLK] [get_bd_pins axi_interconnect_122/M07_ACLK] [get_bd_pins axi_interconnect_122/S00_ACLK] [get_bd_pins axi_interconnect_lite/M01_ACLK]
  connect_bd_net -net pci_clk_buf_IBUF_OUT [get_bd_pins pci_clk_buf/IBUF_OUT] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net reset_rtl_0_1 [get_bd_pins reset_rtl_0] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins PCI_LINK_LED] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins AXIL_ConfigReg_256_2/aresetn] [get_bd_pins AXIL_ReadReg_64_0/aresetn] [get_bd_pins AXI_ADC_overrange_re_0/aresetn] [get_bd_pins AXI_SPI_ADC_0/aresetn] [get_bd_pins D_register_1/dout] [get_bd_pins axi_iic_0/s_axi_aresetn] [get_bd_pins axi_interconnect_122/ARESETN] [get_bd_pins axi_interconnect_122/M00_ARESETN] [get_bd_pins axi_interconnect_122/M01_ARESETN] [get_bd_pins axi_interconnect_122/M02_ARESETN] [get_bd_pins axi_interconnect_122/M03_ARESETN] [get_bd_pins axi_interconnect_122/M04_ARESETN] [get_bd_pins axi_interconnect_122/M05_ARESETN] [get_bd_pins axi_interconnect_122/M06_ARESETN] [get_bd_pins axi_interconnect_122/M07_ARESETN] [get_bd_pins axi_interconnect_122/S00_ARESETN] [get_bd_pins axi_interconnect_lite/M01_ARESETN]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins xdma_0/user_lnk_up]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins AXIL_ReadReg_64_0/readdata0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins D_register_0/din] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins FPGA_CM4_EN] [get_bd_pins xlconstant_2/dout]
  connect_bd_net -net xlconstant_2_pciebusreq_dout [get_bd_pins PCIECLKREQN] [get_bd_pins xlconstant_2_pciebusreq/dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins LEDDrivers] [get_bd_pins xlslice_15/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: FIFO_Interfaces
proc create_hier_cell_FIFO_Interfaces { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_FIFO_Interfaces() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_TX

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_codec

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DDC_9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_codec

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_lite_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_lite_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_lite_2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_lite_3


  # Create pins
  create_bd_pin -dir I CLK12
  create_bd_pin -dir I CLK122
  create_bd_pin -dir I CLK125
  create_bd_pin -dir I aresetn_12
  create_bd_pin -dir I aresetn_122
  create_bd_pin -dir I aresetn_125

  # Create instance: AXI_Stream_Reader_Wr_0, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_0
  if { [catch {set AXI_Stream_Reader_Wr_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_0

  # Create instance: AXI_Stream_Reader_Wr_1, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_1
  if { [catch {set AXI_Stream_Reader_Wr_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_1

  # Create instance: AXI_Stream_Reader_Wr_2, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_2
  if { [catch {set AXI_Stream_Reader_Wr_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_2

  # Create instance: AXI_Stream_Reader_Wr_3, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_3
  if { [catch {set AXI_Stream_Reader_Wr_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_3

  # Create instance: AXI_Stream_Reader_Wr_4, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_4
  if { [catch {set AXI_Stream_Reader_Wr_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_4

  # Create instance: AXI_Stream_Reader_Wr_5, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_5
  if { [catch {set AXI_Stream_Reader_Wr_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_5 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_5

  # Create instance: AXI_Stream_Reader_Wr_6, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_6
  if { [catch {set AXI_Stream_Reader_Wr_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_6 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_6

  # Create instance: AXI_Stream_Reader_Wr_7, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_7
  if { [catch {set AXI_Stream_Reader_Wr_7 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_7 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_7

  # Create instance: AXI_Stream_Reader_Wr_8, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_8
  if { [catch {set AXI_Stream_Reader_Wr_8 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_8 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_8

  # Create instance: AXI_Stream_Reader_Wr_9, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_9
  if { [catch {set AXI_Stream_Reader_Wr_9 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_9 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_9

  # Create instance: AXI_Stream_Reader_Wr_codec, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_codec
  if { [catch {set AXI_Stream_Reader_Wr_codec [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_codec eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXI_DATA_WIDTH {64} \
 ] $AXI_Stream_Reader_Wr_codec

  # Create instance: FIFO_Monitor_0, and set properties
  set block_name FIFO_Monitor
  set block_cell_name FIFO_Monitor_0
  if { [catch {set FIFO_Monitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $FIFO_Monitor_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.FIFO_DEPTH_SIZE {32} \
 ] $FIFO_Monitor_0

  # Create instance: FIFO_Monitor_1, and set properties
  set block_name FIFO_Monitor
  set block_cell_name FIFO_Monitor_1
  if { [catch {set FIFO_Monitor_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $FIFO_Monitor_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.FIFO_DEPTH_SIZE {32} \
 ] $FIFO_Monitor_1

  # Create instance: FIFO_Monitor_2, and set properties
  set block_name FIFO_Monitor
  set block_cell_name FIFO_Monitor_2
  if { [catch {set FIFO_Monitor_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $FIFO_Monitor_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.FIFO_DEPTH_SIZE {32} \
 ] $FIFO_Monitor_2

  # Create instance: FIFO_Monitor_3, and set properties
  set block_name FIFO_Monitor
  set block_cell_name FIFO_Monitor_3
  if { [catch {set FIFO_Monitor_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $FIFO_Monitor_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.FIFO_DEPTH_SIZE {32} \
 ] $FIFO_Monitor_3

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {11} \
 ] $axi_interconnect_0

  # Create instance: axis_data_fifo_DDC0, and set properties
  set axis_data_fifo_DDC0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {2048} \
   CONFIG.HAS_AFULL {0} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.HAS_WR_DATA_COUNT {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC0

  # Create instance: axis_data_fifo_DDC1, and set properties
  set axis_data_fifo_DDC1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC1 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {2048} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC1

  # Create instance: axis_data_fifo_DDC2, and set properties
  set axis_data_fifo_DDC2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC2 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {2048} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC2

  # Create instance: axis_data_fifo_DDC3, and set properties
  set axis_data_fifo_DDC3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC3 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {2048} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC3

  # Create instance: axis_data_fifo_DDC4, and set properties
  set axis_data_fifo_DDC4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC4 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC4

  # Create instance: axis_data_fifo_DDC5, and set properties
  set axis_data_fifo_DDC5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC5 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC5

  # Create instance: axis_data_fifo_DDC6, and set properties
  set axis_data_fifo_DDC6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC6 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC6

  # Create instance: axis_data_fifo_DDC7, and set properties
  set axis_data_fifo_DDC7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC7 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC7

  # Create instance: axis_data_fifo_DDC8, and set properties
  set axis_data_fifo_DDC8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC8 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC8

  # Create instance: axis_data_fifo_DDC9, and set properties
  set axis_data_fifo_DDC9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC9 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DDC9

  # Create instance: axis_data_fifo_DUC, and set properties
  set axis_data_fifo_DUC [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DUC ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {1024} \
   CONFIG.HAS_WR_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_DUC

  # Create instance: axis_data_fifo_codecmic, and set properties
  set axis_data_fifo_codecmic [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_codecmic ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {256} \
   CONFIG.HAS_RD_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_codecmic

  # Create instance: axis_data_fifo_codecspk, and set properties
  set axis_data_fifo_codecspk [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_codecspk ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {256} \
   CONFIG.HAS_WR_DATA_COUNT {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_codecspk

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_0

  # Create instance: xlconstant_val0, and set properties
  set xlconstant_val0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_val0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_val0

  # Create interface connections
  connect_bd_intf_net -intf_net AXI_Stream_Reader_Wr_0_m_axis [get_bd_intf_pins AXI_Stream_Reader_Wr_0/m_axis] [get_bd_intf_pins axis_data_fifo_DUC/S_AXIS]
  connect_bd_intf_net -intf_net AXI_Stream_Reader_Wr_10_m_axis [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/m_axis] [get_bd_intf_pins axis_data_fifo_codecspk/S_AXIS]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXIS_DDC_0] [get_bd_intf_pins axis_data_fifo_DDC0/S_AXIS]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXIS_DDC_1] [get_bd_intf_pins axis_data_fifo_DDC1/S_AXIS]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXIS_DDC_2] [get_bd_intf_pins axis_data_fifo_DDC2/S_AXIS]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins S_AXIS_DDC_3] [get_bd_intf_pins axis_data_fifo_DDC3/S_AXIS]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins S_AXIS_DDC_4] [get_bd_intf_pins axis_data_fifo_DDC4/S_AXIS]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins S_AXIS_DDC_5] [get_bd_intf_pins axis_data_fifo_DDC5/S_AXIS]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins S_AXIS_DDC_6] [get_bd_intf_pins axis_data_fifo_DDC6/S_AXIS]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins S_AXIS_DDC_7] [get_bd_intf_pins axis_data_fifo_DDC7/S_AXIS]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins S_AXIS_DDC_8] [get_bd_intf_pins axis_data_fifo_DDC8/S_AXIS]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins S_AXIS_DDC_9] [get_bd_intf_pins axis_data_fifo_DDC9/S_AXIS]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins S_AXIS_codec] [get_bd_intf_pins axis_data_fifo_codecmic/S_AXIS]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins M_AXIS_codec] [get_bd_intf_pins axis_data_fifo_codecspk/M_AXIS]
  connect_bd_intf_net -intf_net Conn13 [get_bd_intf_pins M_AXIS_TX] [get_bd_intf_pins axis_data_fifo_DUC/M_AXIS]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins S00_AXI_0] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins s_axi_lite_0] [get_bd_intf_pins FIFO_Monitor_0/s_axi]
  connect_bd_intf_net -intf_net Conn16 [get_bd_intf_pins s_axi_lite_1] [get_bd_intf_pins FIFO_Monitor_1/s_axi]
  connect_bd_intf_net -intf_net Conn17 [get_bd_intf_pins s_axi_lite_2] [get_bd_intf_pins FIFO_Monitor_2/s_axi]
  connect_bd_intf_net -intf_net Conn18 [get_bd_intf_pins s_axi_lite_3] [get_bd_intf_pins FIFO_Monitor_3/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_0/s_axi] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_1/s_axi] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_2/s_axi] [get_bd_intf_pins axi_interconnect_0/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_3/s_axi] [get_bd_intf_pins axi_interconnect_0/M03_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_4/s_axi] [get_bd_intf_pins axi_interconnect_0/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_5/s_axi] [get_bd_intf_pins axi_interconnect_0/M05_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_6/s_axi] [get_bd_intf_pins axi_interconnect_0/M06_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_7/s_axi] [get_bd_intf_pins axi_interconnect_0/M07_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M08_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_8/s_axi] [get_bd_intf_pins axi_interconnect_0/M08_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M09_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_9/s_axi] [get_bd_intf_pins axi_interconnect_0/M09_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M10_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/s_axi] [get_bd_intf_pins axi_interconnect_0/M10_AXI]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC0_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_0/s_axis] [get_bd_intf_pins axis_data_fifo_DDC0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC1_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_1/s_axis] [get_bd_intf_pins axis_data_fifo_DDC1/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC2_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_2/s_axis] [get_bd_intf_pins axis_data_fifo_DDC2/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC3_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_3/s_axis] [get_bd_intf_pins axis_data_fifo_DDC3/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC4_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_4/s_axis] [get_bd_intf_pins axis_data_fifo_DDC4/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC5_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_5/s_axis] [get_bd_intf_pins axis_data_fifo_DDC5/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC6_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_6/s_axis] [get_bd_intf_pins axis_data_fifo_DDC6/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC7_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_7/s_axis] [get_bd_intf_pins axis_data_fifo_DDC7/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC8_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_8/s_axis] [get_bd_intf_pins axis_data_fifo_DDC8/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC9_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_9/s_axis] [get_bd_intf_pins axis_data_fifo_DDC9/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_codecmic_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/s_axis] [get_bd_intf_pins axis_data_fifo_codecmic/M_AXIS]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins CLK125] [get_bd_pins AXI_Stream_Reader_Wr_0/aclk] [get_bd_pins AXI_Stream_Reader_Wr_1/aclk] [get_bd_pins AXI_Stream_Reader_Wr_2/aclk] [get_bd_pins AXI_Stream_Reader_Wr_3/aclk] [get_bd_pins AXI_Stream_Reader_Wr_4/aclk] [get_bd_pins AXI_Stream_Reader_Wr_5/aclk] [get_bd_pins AXI_Stream_Reader_Wr_6/aclk] [get_bd_pins AXI_Stream_Reader_Wr_7/aclk] [get_bd_pins AXI_Stream_Reader_Wr_8/aclk] [get_bd_pins AXI_Stream_Reader_Wr_9/aclk] [get_bd_pins AXI_Stream_Reader_Wr_codec/aclk] [get_bd_pins FIFO_Monitor_0/aclk] [get_bd_pins FIFO_Monitor_1/aclk] [get_bd_pins FIFO_Monitor_2/aclk] [get_bd_pins FIFO_Monitor_3/aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/M09_ACLK] [get_bd_pins axi_interconnect_0/M10_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axis_data_fifo_DDC0/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC1/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC2/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC3/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC4/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC5/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC6/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC7/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC8/m_axis_aclk] [get_bd_pins axis_data_fifo_DDC9/m_axis_aclk] [get_bd_pins axis_data_fifo_DUC/s_axis_aclk] [get_bd_pins axis_data_fifo_codecmic/m_axis_aclk] [get_bd_pins axis_data_fifo_codecspk/s_axis_aclk]
  connect_bd_net -net CLK12_1 [get_bd_pins CLK12] [get_bd_pins axis_data_fifo_codecmic/s_axis_aclk] [get_bd_pins axis_data_fifo_codecspk/m_axis_aclk]
  connect_bd_net -net M10_ARESETN_1 [get_bd_pins aresetn_125] [get_bd_pins AXI_Stream_Reader_Wr_0/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_1/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_2/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_3/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_4/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_5/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_6/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_7/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_8/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_9/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_codec/aresetn] [get_bd_pins FIFO_Monitor_0/aresetn] [get_bd_pins FIFO_Monitor_1/aresetn] [get_bd_pins FIFO_Monitor_2/aresetn] [get_bd_pins FIFO_Monitor_3/aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/M09_ARESETN] [get_bd_pins axi_interconnect_0/M10_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_data_fifo_DUC/s_axis_aresetn] [get_bd_pins axis_data_fifo_codecspk/s_axis_aresetn]
  connect_bd_net -net Net [get_bd_pins aresetn_122] [get_bd_pins axis_data_fifo_DDC0/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC1/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC2/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC3/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC4/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC5/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC6/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC7/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC8/s_axis_aresetn] [get_bd_pins axis_data_fifo_DDC9/s_axis_aresetn]
  connect_bd_net -net Net1 [get_bd_pins CLK122] [get_bd_pins axis_data_fifo_DDC0/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC1/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC2/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC3/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC4/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC5/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC6/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC7/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC8/s_axis_aclk] [get_bd_pins axis_data_fifo_DDC9/s_axis_aclk] [get_bd_pins axis_data_fifo_DUC/m_axis_aclk]
  connect_bd_net -net aresetn_12_1 [get_bd_pins aresetn_12] [get_bd_pins axis_data_fifo_codecmic/s_axis_aresetn]
  connect_bd_net -net axis_data_fifo_DDC0_axis_rd_data_count [get_bd_pins FIFO_Monitor_0/fifo1_count] [get_bd_pins axis_data_fifo_DDC0/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC1_axis_rd_data_count [get_bd_pins FIFO_Monitor_0/fifo2_count] [get_bd_pins axis_data_fifo_DDC1/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC2_axis_rd_data_count [get_bd_pins FIFO_Monitor_0/fifo3_count] [get_bd_pins axis_data_fifo_DDC2/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC3_axis_rd_data_count [get_bd_pins FIFO_Monitor_0/fifo4_count] [get_bd_pins axis_data_fifo_DDC3/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC4_axis_rd_data_count [get_bd_pins FIFO_Monitor_1/fifo1_count] [get_bd_pins axis_data_fifo_DDC4/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC5_axis_rd_data_count [get_bd_pins FIFO_Monitor_1/fifo2_count] [get_bd_pins axis_data_fifo_DDC5/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC6_axis_rd_data_count [get_bd_pins FIFO_Monitor_1/fifo3_count] [get_bd_pins axis_data_fifo_DDC6/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC7_axis_rd_data_count [get_bd_pins FIFO_Monitor_1/fifo4_count] [get_bd_pins axis_data_fifo_DDC7/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC8_axis_rd_data_count [get_bd_pins FIFO_Monitor_2/fifo1_count] [get_bd_pins axis_data_fifo_DDC8/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DDC9_axis_rd_data_count [get_bd_pins FIFO_Monitor_2/fifo2_count] [get_bd_pins axis_data_fifo_DDC9/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_DUC_axis_wr_data_count [get_bd_pins FIFO_Monitor_3/fifo1_count] [get_bd_pins axis_data_fifo_DUC/axis_wr_data_count]
  connect_bd_net -net axis_data_fifo_codecmic_axis_rd_data_count [get_bd_pins FIFO_Monitor_3/fifo2_count] [get_bd_pins axis_data_fifo_codecmic/axis_rd_data_count]
  connect_bd_net -net axis_data_fifo_codecspk_axis_wr_data_count [get_bd_pins FIFO_Monitor_3/fifo3_count] [get_bd_pins axis_data_fifo_codecspk/axis_wr_data_count]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins FIFO_Monitor_2/fifo3_count] [get_bd_pins FIFO_Monitor_2/fifo4_count] [get_bd_pins FIFO_Monitor_3/fifo4_count] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_val0_dout [get_bd_pins FIFO_Monitor_0/fifo1_overflow] [get_bd_pins FIFO_Monitor_0/fifo2_overflow] [get_bd_pins FIFO_Monitor_0/fifo3_overflow] [get_bd_pins FIFO_Monitor_0/fifo4_overflow] [get_bd_pins FIFO_Monitor_1/fifo1_overflow] [get_bd_pins FIFO_Monitor_1/fifo2_overflow] [get_bd_pins FIFO_Monitor_1/fifo3_overflow] [get_bd_pins FIFO_Monitor_1/fifo4_overflow] [get_bd_pins FIFO_Monitor_2/fifo1_overflow] [get_bd_pins FIFO_Monitor_2/fifo2_overflow] [get_bd_pins FIFO_Monitor_2/fifo3_overflow] [get_bd_pins FIFO_Monitor_2/fifo4_overflow] [get_bd_pins FIFO_Monitor_3/fifo1_overflow] [get_bd_pins FIFO_Monitor_3/fifo2_overflow] [get_bd_pins FIFO_Monitor_3/fifo3_overflow] [get_bd_pins FIFO_Monitor_3/fifo4_overflow] [get_bd_pins xlconstant_val0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DAC_LVDS_Pins
proc create_hier_cell_DAC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_DAC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_N
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_P
  create_bd_pin -dir I -from 15 -to 0 DAC_SingleEnded

  # Create instance: util_ds_buf_DACDriver, and set properties
  set util_ds_buf_DACDriver [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_DACDriver ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {OBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_DACDriver

  # Create port connections
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins DAC_SingleEnded] [get_bd_pins util_ds_buf_DACDriver/OBUF_IN]
  connect_bd_net -net util_ds_buf_0_OBUF_DS_N [get_bd_pins DAC_Out_N] [get_bd_pins util_ds_buf_DACDriver/OBUF_DS_N]
  connect_bd_net -net util_ds_buf_0_OBUF_DS_P [get_bd_pins DAC_Out_P] [get_bd_pins util_ds_buf_DACDriver/OBUF_DS_P]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ADC_LVDS_Pins
proc create_hier_cell_ADC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ADC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 0 -to 0 ADC1Overrange_SingleEnded
  create_bd_pin -dir I ADC1_CLKin_N
  create_bd_pin -dir I ADC1_CLKin_P
  create_bd_pin -dir O -from 0 -to 0 ADC1_CLKout_se
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_P
  create_bd_pin -dir I ADC1_Ovr_In_N
  create_bd_pin -dir I ADC1_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC1_SingleEnded
  create_bd_pin -dir O -from 0 -to 0 ADC2Overrange_SingleEnded
  create_bd_pin -dir I ADC2_CLKin_N
  create_bd_pin -dir I ADC2_CLKin_P
  create_bd_pin -dir O -from 0 -to 0 ADC2_CLKout_se
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_P
  create_bd_pin -dir I ADC2_Ovr_In_N
  create_bd_pin -dir I ADC2_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC2_SingleEnded

  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_0

  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_1 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_1

  # Create instance: util_ds_buf_2, and set properties
  set util_ds_buf_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_2 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {1} \
 ] $util_ds_buf_2

  # Create instance: util_ds_buf_3, and set properties
  set util_ds_buf_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_3 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {1} \
 ] $util_ds_buf_3

  # Create instance: util_ds_buf_4, and set properties
  set util_ds_buf_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_4 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
 ] $util_ds_buf_4

  # Create instance: util_ds_buf_5, and set properties
  set util_ds_buf_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_5 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
 ] $util_ds_buf_5

  # Create port connections
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_pins ADC1_CLKin_N] [get_bd_pins util_ds_buf_4/IBUF_DS_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_pins ADC1_CLKin_P] [get_bd_pins util_ds_buf_4/IBUF_DS_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_pins ADC1_In_N] [get_bd_pins util_ds_buf_0/IBUF_DS_N]
  connect_bd_net -net ADC1_In_N_2 [get_bd_pins ADC2_In_N] [get_bd_pins util_ds_buf_1/IBUF_DS_N]
  connect_bd_net -net ADC1_In_P_1 [get_bd_pins ADC1_In_P] [get_bd_pins util_ds_buf_0/IBUF_DS_P]
  connect_bd_net -net ADC1_In_P_2 [get_bd_pins ADC2_In_P] [get_bd_pins util_ds_buf_1/IBUF_DS_P]
  connect_bd_net -net ADC1_Ovr_In_N_1 [get_bd_pins ADC1_Ovr_In_N] [get_bd_pins util_ds_buf_3/IBUF_DS_N]
  connect_bd_net -net ADC1_Ovr_In_P_1 [get_bd_pins ADC1_Ovr_In_P] [get_bd_pins util_ds_buf_3/IBUF_DS_P]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_pins ADC2_CLKin_N] [get_bd_pins util_ds_buf_5/IBUF_DS_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_pins ADC2_CLKin_P] [get_bd_pins util_ds_buf_5/IBUF_DS_P]
  connect_bd_net -net ADC2_Ovr_In_N_1 [get_bd_pins ADC2_Ovr_In_N] [get_bd_pins util_ds_buf_2/IBUF_DS_N]
  connect_bd_net -net ADC2_Ovr_In_P_1 [get_bd_pins ADC2_Ovr_In_P] [get_bd_pins util_ds_buf_2/IBUF_DS_P]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins ADC1_SingleEnded] [get_bd_pins util_ds_buf_0/IBUF_OUT]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT1 [get_bd_pins ADC2_SingleEnded] [get_bd_pins util_ds_buf_1/IBUF_OUT]
  connect_bd_net -net util_ds_buf_2_IBUF_OUT [get_bd_pins ADC2Overrange_SingleEnded] [get_bd_pins util_ds_buf_2/IBUF_OUT]
  connect_bd_net -net util_ds_buf_3_IBUF_OUT [get_bd_pins ADC1Overrange_SingleEnded] [get_bd_pins util_ds_buf_3/IBUF_OUT]
  connect_bd_net -net util_ds_buf_4_IBUF_OUT [get_bd_pins ADC1_CLKout_se] [get_bd_pins util_ds_buf_4/IBUF_OUT]
  connect_bd_net -net util_ds_buf_5_IBUF_OUT [get_bd_pins ADC2_CLKout_se] [get_bd_pins util_ds_buf_5/IBUF_OUT]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set PROM_SPI [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 PROM_SPI ]

  set iic_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 iic_rtl_0 ]

  set pcie_7x_mgt_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0 ]

  set pcie_diff_clock_rtl [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_diff_clock_rtl ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_diff_clock_rtl


  # Create ports
  set ADC1Ovr_In_N [ create_bd_port -dir I ADC1Ovr_In_N ]
  set ADC1Ovr_In_P [ create_bd_port -dir I ADC1Ovr_In_P ]
  set ADC1_ATTEN_CLK [ create_bd_port -dir O ADC1_ATTEN_CLK ]
  set ADC1_ATTEN_DAT [ create_bd_port -dir O ADC1_ATTEN_DAT ]
  set ADC1_ATTEN_LE [ create_bd_port -dir O ADC1_ATTEN_LE ]
  set ADC1_CLKin_N [ create_bd_port -dir I ADC1_CLKin_N ]
  set ADC1_CLKin_P [ create_bd_port -dir I ADC1_CLKin_P ]
  set ADC1_In_N [ create_bd_port -dir I -from 15 -to 0 ADC1_In_N ]
  set ADC1_In_P [ create_bd_port -dir I -from 15 -to 0 ADC1_In_P ]
  set ADC2Ovr_In_N [ create_bd_port -dir I ADC2Ovr_In_N ]
  set ADC2Ovr_In_P [ create_bd_port -dir I ADC2Ovr_In_P ]
  set ADC2_ATTEN_CLK [ create_bd_port -dir O ADC2_ATTEN_CLK ]
  set ADC2_ATTEN_DAT [ create_bd_port -dir O ADC2_ATTEN_DAT ]
  set ADC2_ATTEN_LE [ create_bd_port -dir O ADC2_ATTEN_LE ]
  set ADC2_CLKin_N [ create_bd_port -dir I ADC2_CLKin_N ]
  set ADC2_CLKin_P [ create_bd_port -dir I ADC2_CLKin_P ]
  set ADC2_In_N [ create_bd_port -dir I -from 15 -to 0 ADC2_In_N ]
  set ADC2_In_P [ create_bd_port -dir I -from 15 -to 0 ADC2_In_P ]
  set ADC_CLK [ create_bd_port -dir O -from 0 -to 0 ADC_CLK ]
  set ADC_MISO [ create_bd_port -dir I ADC_MISO ]
  set ADC_MOSI [ create_bd_port -dir O -from 0 -to 0 ADC_MOSI ]
  set ATU_TUNE [ create_bd_port -dir O -from 0 -to 0 ATU_TUNE ]
  set BCLK [ create_bd_port -dir O BCLK ]
  set BLINK_LED [ create_bd_port -dir O -from 0 -to 0 BLINK_LED ]
  set BUFF_Alex_Pin1 [ create_bd_port -dir I BUFF_Alex_Pin1 ]
  set BUFF_Alex_Pin8 [ create_bd_port -dir I BUFF_Alex_Pin8 ]
  set BUF_Out_FPGA [ create_bd_port -dir O -from 0 -to 0 BUF_Out_FPGA ]
  set CTRL_TRSW [ create_bd_port -dir O CTRL_TRSW ]
  set DAC_Out_N [ create_bd_port -dir O -from 15 -to 0 DAC_Out_N ]
  set DAC_Out_P [ create_bd_port -dir O -from 15 -to 0 DAC_Out_P ]
  set DDCAFreq_0 [ create_bd_port -dir I -from 31 -to 0 DDCAFreq_0 ]
  set DDCBFreq_0 [ create_bd_port -dir I -from 31 -to 0 DDCBFreq_0 ]
  set DRIVER_PA_EN [ create_bd_port -dir O DRIVER_PA_EN ]
  set Dac_Atten [ create_bd_port -dir O -from 5 -to 0 Dac_Atten ]
  set Dac_Atten_Clk [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Clk ]
  set Dac_Atten_Data [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Data ]
  set Dac_Atten_LE [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_LE ]
  set Dac_Atten_Mode [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Mode ]
  set EMC_CLK [ create_bd_port -dir I -type clk -freq_hz 122880000 EMC_CLK ]
  set FPGA_CM4_EN [ create_bd_port -dir O -from 0 -to 0 FPGA_CM4_EN ]
  set GPIO_OUT [ create_bd_port -dir O -from 23 -to 0 GPIO_OUT ]
  set LEDOutputs [ create_bd_port -dir O -from 15 -to 0 LEDOutputs ]
  set LRCLK [ create_bd_port -dir O LRCLK ]
  set MCLK [ create_bd_port -dir O -type clk MCLK ]
  set MOX_strobe [ create_bd_port -dir O MOX_strobe ]
  set PCIECLKREQN [ create_bd_port -dir O -from 0 -to 0 PCIECLKREQN ]
  set PCI_LINK_LED [ create_bd_port -dir O -from 0 -to 0 PCI_LINK_LED ]
  set PCIe_T_SMBCLK [ create_bd_port -dir I PCIe_T_SMBCLK ]
  set PCIe_T_SMBDAT [ create_bd_port -dir I PCIe_T_SMBDAT ]
  set RF_SPI_CK [ create_bd_port -dir O RF_SPI_CK ]
  set RF_SPI_DATA [ create_bd_port -dir O RF_SPI_DATA ]
  set RF_SPI_RX_LOAD [ create_bd_port -dir O RF_SPI_RX_LOAD ]
  set RF_SPI_TX_LOAD [ create_bd_port -dir O RF_SPI_TX_LOAD ]
  set TXRX_RELAY [ create_bd_port -dir O -from 0 -to 0 TXRX_RELAY ]
  set TX_DAC_PWM [ create_bd_port -dir O TX_DAC_PWM ]
  set TX_ENABLE [ create_bd_port -dir I TX_ENABLE ]
  set clock_122_in_n [ create_bd_port -dir I clock_122_in_n ]
  set clock_122_in_p [ create_bd_port -dir I -type clk -freq_hz 122880000 clock_122_in_p ]
  set i2srxd [ create_bd_port -dir I i2srxd ]
  set i2stxd [ create_bd_port -dir O i2stxd ]
  set nADC_CS [ create_bd_port -dir O -from 0 -to 0 nADC_CS ]
  set pcie_reset_n [ create_bd_port -dir I -type rst pcie_reset_n ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_reset_n
  set pll_cr [ create_bd_port -dir O pll_cr ]
  set ref_in_10 [ create_bd_port -dir I ref_in_10 ]
  set status_in [ create_bd_port -dir I -from 9 -to 0 status_in ]

  # Create instance: ADC_LVDS_Pins
  create_hier_cell_ADC_LVDS_Pins [current_bd_instance .] ADC_LVDS_Pins

  # Create instance: DAC_LVDS_Pins
  create_hier_cell_DAC_LVDS_Pins [current_bd_instance .] DAC_LVDS_Pins

  # Create instance: FIFO_Interfaces
  create_hier_cell_FIFO_Interfaces [current_bd_instance .] FIFO_Interfaces

  # Create instance: PCIe
  create_hier_cell_PCIe [current_bd_instance .] PCIe

  # Create instance: RF_interfaces
  create_hier_cell_RF_interfaces [current_bd_instance .] RF_interfaces

  # Create instance: Receiver
  create_hier_cell_Receiver [current_bd_instance .] Receiver

  # Create instance: Transmitter
  create_hier_cell_Transmitter [current_bd_instance .] Transmitter

  # Create instance: audio_codec
  create_hier_cell_audio_codec [current_bd_instance .] audio_codec

  # Create instance: c_counter_binary_0, and set properties
  set c_counter_binary_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:c_counter_binary:12.0 c_counter_binary_0 ]
  set_property -dict [ list \
   CONFIG.Output_Width {26} \
 ] $c_counter_binary_0

  # Create instance: clock_generator
  create_hier_cell_clock_generator [current_bd_instance .] clock_generator

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DIN_WIDTH {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create interface connections
  connect_bd_intf_net -intf_net FIFO_Interfaces_M_AXIS_codec [get_bd_intf_pins FIFO_Interfaces/M_AXIS_codec] [get_bd_intf_pins audio_codec/LR_Spkr_data]
  connect_bd_intf_net -intf_net PCIe_M03_AXI_0 [get_bd_intf_pins FIFO_Interfaces/s_axi_lite_0] [get_bd_intf_pins PCIe/M03_AXI_0]
  connect_bd_intf_net -intf_net PCIe_M05_AXI_0 [get_bd_intf_pins FIFO_Interfaces/s_axi_lite_2] [get_bd_intf_pins PCIe/M05_AXI_0]
  connect_bd_intf_net -intf_net PCIe_M_AXI_Alex [get_bd_intf_pins PCIe/M_AXI_Alex] [get_bd_intf_pins RF_interfaces/s_axi_alex]
  connect_bd_intf_net -intf_net PCIe_M_AXI_full_0 [get_bd_intf_pins FIFO_Interfaces/S00_AXI_0] [get_bd_intf_pins PCIe/M_AXI_full_0]
  connect_bd_intf_net -intf_net PCIe_SPI_0_0 [get_bd_intf_ports PROM_SPI] [get_bd_intf_pins PCIe/PROM_SPI]
  connect_bd_intf_net -intf_net PCIe_iic_rtl_0 [get_bd_intf_ports iic_rtl_0] [get_bd_intf_pins PCIe/iic_rtl_0]
  connect_bd_intf_net -intf_net PCIe_pcie_7x_mgt_rtl_0 [get_bd_intf_ports pcie_7x_mgt_rtl_0] [get_bd_intf_pins PCIe/pcie_7x_mgt_rtl_0]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC0 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_0] [get_bd_intf_pins Receiver/m_axis_DDC0]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC1 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_1] [get_bd_intf_pins Receiver/m_axis_DDC1]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC2 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_2] [get_bd_intf_pins Receiver/m_axis_DDC2]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC3 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_3] [get_bd_intf_pins Receiver/m_axis_DDC3]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC4 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_4] [get_bd_intf_pins Receiver/m_axis_DDC4]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC5 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_5] [get_bd_intf_pins Receiver/m_axis_DDC5]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC6 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_6] [get_bd_intf_pins Receiver/m_axis_DDC6]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC7 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_7] [get_bd_intf_pins Receiver/m_axis_DDC7]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC8 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_8] [get_bd_intf_pins Receiver/m_axis_DDC8]
  connect_bd_intf_net -intf_net Receiver_m_axis_DDC9 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_DDC_9] [get_bd_intf_pins Receiver/m_axis_DDC9]
  connect_bd_intf_net -intf_net TX_IQ_In_1 [get_bd_intf_pins FIFO_Interfaces/M_AXIS_TX] [get_bd_intf_pins Transmitter/TX_IQ_In]
  connect_bd_intf_net -intf_net audio_codec_RX_Audio_Data [get_bd_intf_pins FIFO_Interfaces/S_AXIS_codec] [get_bd_intf_pins audio_codec/RX_Audio_Data]
  connect_bd_intf_net -intf_net diff_clock_rtl_0_1 [get_bd_intf_ports pcie_diff_clock_rtl] [get_bd_intf_pins PCIe/diff_clock_rtl_0]
  connect_bd_intf_net -intf_net s_axi_0_1 [get_bd_intf_pins PCIe/M00_AXI_0] [get_bd_intf_pins Receiver/s_axi_0]
  connect_bd_intf_net -intf_net s_axi_1_1 [get_bd_intf_pins PCIe/M01_AXI_0] [get_bd_intf_pins Receiver/s_axi_1]
  connect_bd_intf_net -intf_net s_axi_lite_1_1 [get_bd_intf_pins FIFO_Interfaces/s_axi_lite_1] [get_bd_intf_pins PCIe/M04_AXI_0]
  connect_bd_intf_net -intf_net s_axi_lite_3_1 [get_bd_intf_pins FIFO_Interfaces/s_axi_lite_3] [get_bd_intf_pins PCIe/M06_AXI_0]

  # Create port connections
  connect_bd_net -net ADC1Ovr_In_N_1 [get_bd_ports ADC1Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_N]
  connect_bd_net -net ADC1Ovr_In_P_1 [get_bd_ports ADC1Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_P]
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_ports ADC1_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_ports ADC1_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_ports ADC1_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_In_N]
  connect_bd_net -net ADC1_In_P_1 [get_bd_ports ADC1_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_In_P]
  connect_bd_net -net ADC1_Overrange_1 [get_bd_pins ADC_LVDS_Pins/ADC1Overrange_SingleEnded] [get_bd_pins PCIe/ADC1_Overrange]
  connect_bd_net -net ADC2Ovr_In_N_1 [get_bd_ports ADC2Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_N]
  connect_bd_net -net ADC2Ovr_In_P_1 [get_bd_ports ADC2Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_P]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_ports ADC2_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_ports ADC2_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_P]
  connect_bd_net -net ADC2_In_N_1 [get_bd_ports ADC2_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_In_N]
  connect_bd_net -net ADC2_In_P_1 [get_bd_ports ADC2_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_In_P]
  connect_bd_net -net ADC2_Overrange_1 [get_bd_pins ADC_LVDS_Pins/ADC2Overrange_SingleEnded] [get_bd_pins PCIe/ADC2_Overrange]
  connect_bd_net -net ADC_Ctrl_1 [get_bd_pins PCIe/ADCCtrlData] [get_bd_pins RF_interfaces/ADC_Ctrl]
  connect_bd_net -net ADC_LVDS_Pins_ADC1_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC1_SingleEnded] [get_bd_pins Receiver/adc1]
  connect_bd_net -net ADC_LVDS_Pins_ADC2_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC2_SingleEnded] [get_bd_pins Receiver/adc2]
  connect_bd_net -net ADC_MISO_0_1 [get_bd_ports ADC_MISO] [get_bd_pins PCIe/ADC_MISO]
  connect_bd_net -net BUFF_Alex_Pin1_0_1 [get_bd_ports BUFF_Alex_Pin1] [get_bd_pins RF_interfaces/BUFF_Alex_Pin1]
  connect_bd_net -net BUFF_Alex_Pin8_0_1 [get_bd_ports BUFF_Alex_Pin8] [get_bd_pins RF_interfaces/BUFF_Alex_Pin8]
  connect_bd_net -net CodecConfig_1 [get_bd_pins PCIe/CodecConfigData] [get_bd_pins audio_codec/CodecConfig]
  connect_bd_net -net DAC_Ctrl_1 [get_bd_pins PCIe/DACCtrlData] [get_bd_pins RF_interfaces/DAC_Ctrl]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_N [get_bd_ports DAC_Out_N] [get_bd_pins DAC_LVDS_Pins/DAC_Out_N]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_P [get_bd_ports DAC_Out_P] [get_bd_pins DAC_LVDS_Pins/DAC_Out_P]
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins DAC_LVDS_Pins/DAC_SingleEnded] [get_bd_pins Transmitter/TXDACData]
  connect_bd_net -net EMC_CLK_1 [get_bd_ports EMC_CLK] [get_bd_pins c_counter_binary_0/CLK]
  connect_bd_net -net I2S_xmit_0_outbit [get_bd_ports i2stxd] [get_bd_pins audio_codec/i2stxd]
  connect_bd_net -net PCIe_ADC_CLK [get_bd_ports ADC_CLK] [get_bd_pins PCIe/ADC_CLK]
  connect_bd_net -net PCIe_ADC_MOSI [get_bd_ports ADC_MOSI] [get_bd_pins PCIe/ADC_MOSI]
  connect_bd_net -net PCIe_FPGA_CM4_EN [get_bd_ports FPGA_CM4_EN] [get_bd_pins PCIe/FPGA_CM4_EN]
  connect_bd_net -net PCIe_LEDDrivers [get_bd_ports LEDOutputs] [get_bd_pins PCIe/LEDDrivers]
  connect_bd_net -net PCIe_PCIECLKREQN [get_bd_ports PCIECLKREQN] [get_bd_pins PCIe/PCIECLKREQN]
  connect_bd_net -net PCIe_PCI_LINK_LED [get_bd_ports PCI_LINK_LED] [get_bd_pins PCIe/PCI_LINK_LED]
  connect_bd_net -net PCIe_RFGPIOData [get_bd_pins PCIe/RFGPIOData] [get_bd_pins RF_interfaces/RF_GPIO]
  connect_bd_net -net PCIe_TXTestFreqData [get_bd_pins PCIe/TXTestFreqData] [get_bd_pins Transmitter/TXTestFreq]
  connect_bd_net -net PCIe_T_SMBCLK_0_1 [get_bd_ports PCIe_T_SMBCLK] [get_bd_pins PCIe/PCIe_T_SMBCLK]
  connect_bd_net -net PCIe_T_SMBDAT_0_1 [get_bd_ports PCIe_T_SMBDAT] [get_bd_pins PCIe/PCIe_T_SMBDAT]
  connect_bd_net -net PCIe_aresetn12 [get_bd_pins FIFO_Interfaces/aresetn_12] [get_bd_pins PCIe/aresetn12]
  connect_bd_net -net PCIe_axi_aclk_125 [get_bd_pins FIFO_Interfaces/CLK125] [get_bd_pins PCIe/axi_aclk_125]
  connect_bd_net -net PCIe_axi_resetn [get_bd_pins PCIe/axi_resetn] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din]
  connect_bd_net -net PCIe_nADC_CS [get_bd_ports nADC_CS] [get_bd_pins PCIe/nADC_CS]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_ports TX_DAC_PWM] [get_bd_pins RF_interfaces/TX_DAC_PWM]
  connect_bd_net -net RF_interfaces_ADC_Randomise [get_bd_pins RF_interfaces/ADC_Randomise] [get_bd_pins Receiver/ADC_Randomise]
  connect_bd_net -net RF_interfaces_BUF_Out_FPGA [get_bd_ports BUF_Out_FPGA] [get_bd_pins RF_interfaces/BUF_Out_FPGA]
  connect_bd_net -net RF_interfaces_Dac_Atten_Clk [get_bd_ports Dac_Atten_Clk] [get_bd_pins RF_interfaces/Dac_Atten_Clk]
  connect_bd_net -net RF_interfaces_Dac_Atten_Data [get_bd_ports Dac_Atten_Data] [get_bd_pins RF_interfaces/Dac_Atten_Data]
  connect_bd_net -net RF_interfaces_Dac_Atten_LE [get_bd_ports Dac_Atten_LE] [get_bd_pins RF_interfaces/Dac_Atten_LE]
  connect_bd_net -net RF_interfaces_Dac_Atten_Mode [get_bd_ports Dac_Atten_Mode] [get_bd_pins RF_interfaces/Dac_Atten_Mode]
  connect_bd_net -net RF_interfaces_status_out [get_bd_pins PCIe/Status_data] [get_bd_pins RF_interfaces/status_out]
  connect_bd_net -net SPI_0_Rx_load_strobe [get_bd_ports RF_SPI_RX_LOAD] [get_bd_pins RF_interfaces/RF_SPI_RX_LOAD]
  connect_bd_net -net SPI_0_SPI_clock [get_bd_ports RF_SPI_CK] [get_bd_pins RF_interfaces/RF_SPI_CK]
  connect_bd_net -net SPI_0_SPI_data [get_bd_ports RF_SPI_DATA] [get_bd_pins RF_interfaces/RF_SPI_DATA]
  connect_bd_net -net SPI_0_Tx_load_strobe [get_bd_ports RF_SPI_TX_LOAD] [get_bd_pins RF_interfaces/RF_SPI_TX_LOAD]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_ports ADC1_ATTEN_CLK] [get_bd_pins RF_interfaces/ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_ports ADC1_ATTEN_DAT] [get_bd_pins RF_interfaces/ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_ports ADC1_ATTEN_LE] [get_bd_pins RF_interfaces/ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_ports ADC2_ATTEN_CLK] [get_bd_pins RF_interfaces/ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_ports ADC2_ATTEN_DAT] [get_bd_pins RF_interfaces/ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_ports ADC2_ATTEN_LE] [get_bd_pins RF_interfaces/ADC2_ATTEN_LE]
  connect_bd_net -net TXConfig_1 [get_bd_pins PCIe/TXConfigData] [get_bd_pins Transmitter/TXConfig]
  connect_bd_net -net TXLOTune_1 [get_bd_pins PCIe/TXFreqData] [get_bd_pins Transmitter/TXLOTune]
  connect_bd_net -net TX_ENABLE_0_1 [get_bd_ports TX_ENABLE] [get_bd_pins PCIe/TX_ENABLE] [get_bd_pins Transmitter/TX_ENABLE]
  connect_bd_net -net Transmitter_cw_ptt1 [get_bd_pins RF_interfaces/keyer_PTT] [get_bd_pins Transmitter/cw_ptt1]
  connect_bd_net -net aresetn_125_1 [get_bd_pins FIFO_Interfaces/aresetn_125] [get_bd_pins PCIe/axi_aresetn_125]
  connect_bd_net -net audio_codec_MCLK [get_bd_ports MCLK] [get_bd_pins audio_codec/MCLK]
  connect_bd_net -net c_counter_binary_0_Q [get_bd_pins c_counter_binary_0/Q] [get_bd_pins xlslice_5/Din]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins FIFO_Interfaces/CLK12] [get_bd_pins PCIe/clk12] [get_bd_pins RF_interfaces/codec_clk] [get_bd_pins audio_codec/clk1] [get_bd_pins clock_generator/clock_12_out]
  connect_bd_net -net clock_122_1 [get_bd_ports clock_122_in_p] [get_bd_pins clock_generator/clock_122_in_p]
  connect_bd_net -net clock_122_delayed_1 [get_bd_pins Receiver/clock_122_delayed] [get_bd_pins clock_generator/clock_122_out_delayed]
  connect_bd_net -net clock_122_in_n_1 [get_bd_ports clock_122_in_n] [get_bd_pins clock_generator/clock_122_in_n]
  connect_bd_net -net clock_generator_clock_122_out [get_bd_pins FIFO_Interfaces/CLK122] [get_bd_pins PCIe/clk_122] [get_bd_pins RF_interfaces/aclk] [get_bd_pins Receiver/aclk] [get_bd_pins Transmitter/clk2] [get_bd_pins clock_generator/clock_122_out]
  connect_bd_net -net cw_key_1 [get_bd_pins RF_interfaces/CW_Key_Down] [get_bd_pins Transmitter/cw_key_down] [get_bd_pins audio_codec/cw_key]
  connect_bd_net -net i2s_clk_lrclk_gen_0_BCLK [get_bd_ports BCLK] [get_bd_pins audio_codec/BCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRCLK [get_bd_ports LRCLK] [get_bd_pins audio_codec/LRCLK]
  connect_bd_net -net is2rxd_1 [get_bd_ports i2srxd] [get_bd_pins audio_codec/i2srxd]
  connect_bd_net -net keyer_config_1 [get_bd_pins PCIe/KeyerConfigData] [get_bd_pins Transmitter/keyer_config] [get_bd_pins audio_codec/keyer_config]
  connect_bd_net -net ref_in_10_1 [get_bd_ports ref_in_10] [get_bd_pins clock_generator/ref_in_10]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_ports Dac_Atten] [get_bd_pins RF_interfaces/Dac_Atten]
  connect_bd_net -net reset_rtl_0_1 [get_bd_ports pcie_reset_n] [get_bd_pins PCIe/reset_rtl_0]
  connect_bd_net -net status_in_1 [get_bd_ports status_in] [get_bd_pins RF_interfaces/status_in]
  connect_bd_net -net tx_samples_1 [get_bd_pins Receiver/tx_samples] [get_bd_pins Transmitter/TXSamplesToRX]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_ports pll_cr] [get_bd_pins clock_generator/pll_cr]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_ports DRIVER_PA_EN] [get_bd_ports MOX_strobe] [get_bd_pins RF_interfaces/MOX_strobe] [get_bd_pins Transmitter/TXStrobe]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_ports CTRL_TRSW] [get_bd_pins RF_interfaces/CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_ports TXRX_RELAY] [get_bd_pins RF_interfaces/TXRX_RELAY]
  connect_bd_net -net xlslice_0_Dout [get_bd_ports GPIO_OUT] [get_bd_pins RF_interfaces/GPIO_OUT]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins FIFO_Interfaces/aresetn_122] [get_bd_pins RF_interfaces/rstn] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins Transmitter/resetn1] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins audio_codec/arstn] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins Receiver/rstn1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins clock_generator/resetn] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_ports ATU_TUNE] [get_bd_pins RF_interfaces/ATU_TUNE]
  connect_bd_net -net xlslice_5_Dout1 [get_bd_ports BLINK_LED] [get_bd_pins xlslice_5/Dout]

  # Create address segments
  assign_bd_address -offset 0x00000200 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ConfigReg_256_2/s_axi/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Receiver/AXIL_ConfigReg_256_RX_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00000100 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Receiver/AXIL_ConfigReg_256_RX_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00000300 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ConfigReg_64_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ReadReg_64_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0001C000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs RF_interfaces/AXILite_Alex_SPI_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXI_ADC_overrange_re_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00004000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXI_SPI_ADC_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_2/s_axi/reg0] -force
  assign_bd_address -offset 0x00030000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_3/s_axi/reg0] -force
  assign_bd_address -offset 0x00040000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_4/s_axi/reg0] -force
  assign_bd_address -offset 0x00050000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_5/s_axi/reg0] -force
  assign_bd_address -offset 0x00060000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_6/s_axi/reg0] -force
  assign_bd_address -offset 0x00070000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_7/s_axi/reg0] -force
  assign_bd_address -offset 0x00080000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_8/s_axi/reg0] -force
  assign_bd_address -offset 0x00090000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_9/s_axi/reg0] -force
  assign_bd_address -offset 0x000A0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_codec/s_axi/reg0] -force
  assign_bd_address -offset 0x00003000 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs FIFO_Interfaces/FIFO_Monitor_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00003100 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs FIFO_Interfaces/FIFO_Monitor_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00003200 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs FIFO_Interfaces/FIFO_Monitor_2/s_axi/reg0] -force
  assign_bd_address -offset 0x00003300 -range 0x00000100 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs FIFO_Interfaces/FIFO_Monitor_3/s_axi/reg0] -force
  assign_bd_address -offset 0x00014000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_iic_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00010000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00018000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/xadc_wiz_0/s_axi_lite/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_Layers":"",
   "Default View_Layout":"",
   "Default View_ScaleFactor":"0.743827",
   "Default View_TopLeft":"472,417",
   "ExpandedHierarchyInLayout":"/PCIe",
   "comment_10":"unused pins for PCIe bus configuration",
   "comment_12":"convert to I/Q stream",
   "comment_13":"convert to I/Q stream",
   "comment_14":"convert to I/Q stream",
   "comment_8":"Unused Alex input pins",
   "comment_9":"unused pins for PCIe bus configuration",
   "commentid":"comment_10|comment_12|comment_13|comment_14|comment_8|comment_9|comment_10|",
   "fillcolor_comment_10":"",
   "fillcolor_comment_8":"",
   "fillcolor_comment_9":"",
   "font_comment_10":"14",
   "font_comment_12":"14",
   "font_comment_13":"14",
   "font_comment_14":"14",
   "font_comment_8":"14",
   "font_comment_9":"14",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port PROM_SPI -pg 1 -lvl 8 -x 5840 -y 680 -defaultsOSRD
preplace port iic_rtl_0 -pg 1 -lvl 8 -x 5840 -y 100 -defaultsOSRD
preplace port pcie_7x_mgt_rtl_0 -pg 1 -lvl 8 -x 5840 -y 80 -defaultsOSRD
preplace port pcie_diff_clock_rtl -pg 1 -lvl 0 -x -180 -y 800 -defaultsOSRD
preplace port port-id_ADC1Ovr_In_N -pg 1 -lvl 0 -x -180 -y 1100 -defaultsOSRD
preplace port port-id_ADC1Ovr_In_P -pg 1 -lvl 0 -x -180 -y 1120 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_CLK -pg 1 -lvl 8 -x 5840 -y -180 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_DAT -pg 1 -lvl 8 -x 5840 -y -160 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_LE -pg 1 -lvl 8 -x 5840 -y -140 -defaultsOSRD
preplace port port-id_ADC1_CLKin_N -pg 1 -lvl 0 -x -180 -y 1020 -defaultsOSRD
preplace port port-id_ADC1_CLKin_P -pg 1 -lvl 0 -x -180 -y 1040 -defaultsOSRD
preplace port port-id_ADC2Ovr_In_N -pg 1 -lvl 0 -x -180 -y 1220 -defaultsOSRD
preplace port port-id_ADC2Ovr_In_P -pg 1 -lvl 0 -x -180 -y 1240 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_CLK -pg 1 -lvl 8 -x 5840 -y -120 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_DAT -pg 1 -lvl 8 -x 5840 -y -100 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_LE -pg 1 -lvl 8 -x 5840 -y -80 -defaultsOSRD
preplace port port-id_ADC2_CLKin_N -pg 1 -lvl 0 -x -180 -y 1140 -defaultsOSRD
preplace port port-id_ADC2_CLKin_P -pg 1 -lvl 0 -x -180 -y 1160 -defaultsOSRD
preplace port port-id_ADC_MISO -pg 1 -lvl 0 -x -180 -y 1430 -defaultsOSRD
preplace port port-id_BCLK -pg 1 -lvl 8 -x 5840 -y 990 -defaultsOSRD
preplace port port-id_BUFF_Alex_Pin1 -pg 1 -lvl 0 -x -180 -y 620 -defaultsOSRD
preplace port port-id_BUFF_Alex_Pin8 -pg 1 -lvl 0 -x -180 -y 640 -defaultsOSRD
preplace port port-id_CTRL_TRSW -pg 1 -lvl 8 -x 5840 -y 580 -defaultsOSRD
preplace port port-id_DRIVER_PA_EN -pg 1 -lvl 8 -x 5840 -y 520 -defaultsOSRD
preplace port port-id_EMC_CLK -pg 1 -lvl 0 -x -180 -y 600 -defaultsOSRD
preplace port port-id_LRCLK -pg 1 -lvl 8 -x 5840 -y 950 -defaultsOSRD
preplace port port-id_MCLK -pg 1 -lvl 8 -x 5840 -y 1120 -defaultsOSRD
preplace port port-id_MOX_strobe -pg 1 -lvl 8 -x 5840 -y 560 -defaultsOSRD
preplace port port-id_PCIe_T_SMBCLK -pg 1 -lvl 0 -x -180 -y 1470 -defaultsOSRD
preplace port port-id_PCIe_T_SMBDAT -pg 1 -lvl 0 -x -180 -y 1450 -defaultsOSRD
preplace port port-id_RF_SPI_CK -pg 1 -lvl 8 -x 5840 -y 620 -defaultsOSRD
preplace port port-id_RF_SPI_DATA -pg 1 -lvl 8 -x 5840 -y 640 -defaultsOSRD
preplace port port-id_RF_SPI_RX_LOAD -pg 1 -lvl 8 -x 5840 -y 660 -defaultsOSRD
preplace port port-id_RF_SPI_TX_LOAD -pg 1 -lvl 8 -x 5840 -y 700 -defaultsOSRD
preplace port port-id_TX_DAC_PWM -pg 1 -lvl 8 -x 5840 -y 720 -defaultsOSRD
preplace port port-id_TX_ENABLE -pg 1 -lvl 0 -x -180 -y 780 -defaultsOSRD
preplace port port-id_clock_122_in_n -pg 1 -lvl 0 -x -180 -y 1300 -defaultsOSRD
preplace port port-id_clock_122_in_p -pg 1 -lvl 0 -x -180 -y 1380 -defaultsOSRD
preplace port port-id_i2srxd -pg 1 -lvl 0 -x -180 -y 760 -defaultsOSRD
preplace port port-id_i2stxd -pg 1 -lvl 8 -x 5840 -y 1080 -defaultsOSRD
preplace port port-id_pcie_reset_n -pg 1 -lvl 0 -x -180 -y 920 -defaultsOSRD
preplace port port-id_pll_cr -pg 1 -lvl 8 -x 5840 -y -200 -defaultsOSRD
preplace port port-id_ref_in_10 -pg 1 -lvl 0 -x -180 -y 1400 -defaultsOSRD
preplace portBus ADC1_In_N -pg 1 -lvl 0 -x -180 -y 1060 -defaultsOSRD
preplace portBus ADC1_In_P -pg 1 -lvl 0 -x -180 -y 1080 -defaultsOSRD
preplace portBus ADC2_In_N -pg 1 -lvl 0 -x -180 -y 1180 -defaultsOSRD
preplace portBus ADC2_In_P -pg 1 -lvl 0 -x -180 -y 1200 -defaultsOSRD
preplace portBus ADC_CLK -pg 1 -lvl 8 -x 5840 -y 1450 -defaultsOSRD
preplace portBus ADC_MOSI -pg 1 -lvl 8 -x 5840 -y 1470 -defaultsOSRD
preplace portBus ATU_TUNE -pg 1 -lvl 8 -x 5840 -y 310 -defaultsOSRD
preplace portBus BLINK_LED -pg 1 -lvl 8 -x 5840 -y -60 -defaultsOSRD
preplace portBus BUF_Out_FPGA -pg 1 -lvl 8 -x 5840 -y 540 -defaultsOSRD
preplace portBus DAC_Out_N -pg 1 -lvl 8 -x 5840 -y 810 -defaultsOSRD
preplace portBus DAC_Out_P -pg 1 -lvl 8 -x 5840 -y 830 -defaultsOSRD
preplace portBus Dac_Atten -pg 1 -lvl 8 -x 5840 -y 370 -defaultsOSRD
preplace portBus Dac_Atten_Clk -pg 1 -lvl 8 -x 5840 -y 500 -defaultsOSRD
preplace portBus Dac_Atten_Data -pg 1 -lvl 8 -x 5840 -y 480 -defaultsOSRD
preplace portBus Dac_Atten_LE -pg 1 -lvl 8 -x 5840 -y 440 -defaultsOSRD
preplace portBus Dac_Atten_Mode -pg 1 -lvl 8 -x 5840 -y 460 -defaultsOSRD
preplace portBus FPGA_CM4_EN -pg 1 -lvl 8 -x 5840 -y 1430 -defaultsOSRD
preplace portBus GPIO_OUT -pg 1 -lvl 8 -x 5840 -y 390 -defaultsOSRD
preplace portBus LEDOutputs -pg 1 -lvl 8 -x 5840 -y 40 -defaultsOSRD
preplace portBus PCIECLKREQN -pg 1 -lvl 8 -x 5840 -y 1100 -defaultsOSRD
preplace portBus PCI_LINK_LED -pg 1 -lvl 8 -x 5840 -y 1510 -defaultsOSRD
preplace portBus TXRX_RELAY -pg 1 -lvl 8 -x 5840 -y 600 -defaultsOSRD
preplace portBus nADC_CS -pg 1 -lvl 8 -x 5840 -y 1490 -defaultsOSRD
preplace portBus status_in -pg 1 -lvl 0 -x -180 -y 580 -defaultsOSRD
preplace portBus DDCAFreq_0 -pg 1 -lvl 0 -x -180 -y 1550 -defaultsOSRD
preplace portBus DDCBFreq_0 -pg 1 -lvl 0 -x -180 -y 1570 -defaultsOSRD
preplace inst ADC_LVDS_Pins -pg 1 -lvl 1 -x 170 -y 1130 -defaultsOSRD
preplace inst DAC_LVDS_Pins -pg 1 -lvl 7 -x 5511 -y 820 -defaultsOSRD
preplace inst PCIe -pg 1 -lvl 3 -x 990 -y 1112 -defaultsOSRD
preplace inst RF_interfaces -pg 1 -lvl 5 -x 4321 -y 340 -defaultsOSRD
preplace inst Receiver -pg 1 -lvl 5 -x 4321 -y 1370 -defaultsOSRD
preplace inst Transmitter -pg 1 -lvl 5 -x 4321 -y 768 -defaultsOSRD
preplace inst audio_codec -pg 1 -lvl 5 -x 4321 -y 1016 -defaultsOSRD
preplace inst c_counter_binary_0 -pg 1 -lvl 1 -x 170 -y 400 -defaultsOSRD
preplace inst clock_generator -pg 1 -lvl 1 -x 170 -y 1360 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 4 -x 3550 -y 40 -defaultsOSRD
preplace inst xlslice_1 -pg 1 -lvl 4 -x 3550 -y 160 -defaultsOSRD
preplace inst xlslice_2 -pg 1 -lvl 4 -x 3550 -y 310 -defaultsOSRD
preplace inst xlslice_3 -pg 1 -lvl 4 -x 3550 -y 410 -defaultsOSRD
preplace inst xlslice_4 -pg 1 -lvl 4 -x 3550 -y 510 -defaultsOSRD
preplace inst xlslice_5 -pg 1 -lvl 2 -x 500 -y 400 -defaultsOSRD
preplace inst FIFO_Interfaces -pg 1 -lvl 6 -x 4971 -y 1400 -defaultsOSRD -resize 448 539
preplace inst PCIe|D_register_0 -pg 1 -lvl 6 -x 2530 -y 1332 -defaultsOSRD
preplace inst PCIe|D_register_1 -pg 1 -lvl 2 -x 1290 -y 1702 -defaultsOSRD
preplace inst PCIe|Double_D_register_syncareset -pg 1 -lvl 1 -x 1050 -y 1722 -defaultsOSRD
preplace inst PCIe|Usr_Reg_Access_0 -pg 1 -lvl 4 -x 1740 -y 952 -defaultsOSRD
preplace inst PCIe|util_vector_logic_0 -pg 1 -lvl 6 -x 2530 -y 2912 -defaultsOSRD
preplace inst PCIe|xadc_wiz_0 -pg 1 -lvl 6 -x 2530 -y 3242 -defaultsOSRD
preplace inst PCIe|xlconcat_2 -pg 1 -lvl 5 -x 2100 -y 1202 -defaultsOSRD
preplace inst PCIe|xlconstant_1 -pg 1 -lvl 1 -x 1050 -y 1612 -defaultsOSRD
preplace inst PCIe|xlconstant_2 -pg 1 -lvl 6 -x 2530 -y 1212 -defaultsOSRD
preplace inst PCIe|xlconstant_2_pciebusreq -pg 1 -lvl 6 -x 2530 -y 2812 -defaultsOSRD
preplace inst PCIe|xlslice_15 -pg 1 -lvl 6 -x 2530 -y 2712 -defaultsOSRD
preplace inst PCIe|AXI_SPI_ADC_0 -pg 1 -lvl 6 -x 2530 -y 1642 -defaultsOSRD
preplace inst PCIe|axi_iic_0 -pg 1 -lvl 6 -x 2530 -y 1492 -defaultsOSRD
preplace inst PCIe|axi_interconnect_122 -pg 1 -lvl 5 -x 2100 -y 1602 -defaultsOSRD
preplace inst PCIe|axi_quad_spi_0 -pg 1 -lvl 6 -x 2530 -y 2412 -defaultsOSRD
preplace inst PCIe|pci_clk_buf -pg 1 -lvl 4 -x 1740 -y 1552 -defaultsOSRD
preplace inst PCIe|AXI_ADC_overrange_re_0 -pg 1 -lvl 6 -x 2530 -y 1072 -defaultsOSRD
preplace inst PCIe|xdma_0 -pg 1 -lvl 6 -x 2530 -y 2142 -defaultsOSRD
preplace inst PCIe|axi_interconnect_lite -pg 1 -lvl 4 -x 1740 -y 2162 -defaultsOSRD
preplace inst PCIe|axi_interconnect_lite_125 -pg 1 -lvl 5 -x 2100 -y 2332 -defaultsOSRD
preplace inst PCIe|AXIL_ConfigReg_64_0 -pg 1 -lvl 6 -x 2530 -y 2562 -defaultsOSRD
preplace inst PCIe|AXIL_ConfigReg_256_2 -pg 1 -lvl 6 -x 2530 -y 1872 -defaultsOSRD
preplace inst PCIe|AXIL_ReadReg_64_0 -pg 1 -lvl 6 -x 2530 -y 892 -defaultsOSRD
preplace inst PCIe|xlconcat_0 -pg 1 -lvl 4 -x 1740 -y 1392 -defaultsOSRD
preplace inst PCIe|xlconstant_0 -pg 1 -lvl 3 -x 1480 -y 1392 -defaultsOSRD
preplace inst PCIe|Double_D_register_syncareset1 -pg 1 -lvl 6 -x 2530 -y 3052 -defaultsOSRD
preplace netloc ADC1Ovr_In_N_1 1 0 1 N 1100
preplace netloc ADC1Ovr_In_P_1 1 0 1 N 1120
preplace netloc ADC1_CLKin_N_1 1 0 1 N 1020
preplace netloc ADC1_CLKin_P_1 1 0 1 N 1040
preplace netloc ADC1_In_N_1 1 0 1 N 1060
preplace netloc ADC1_In_P_1 1 0 1 N 1080
preplace netloc ADC1_Overrange_1 1 1 2 NJ 1080 670
preplace netloc ADC2Ovr_In_N_1 1 0 1 N 1220
preplace netloc ADC2Ovr_In_P_1 1 0 1 N 1240
preplace netloc ADC2_CLKin_N_1 1 0 1 N 1140
preplace netloc ADC2_CLKin_P_1 1 0 1 N 1160
preplace netloc ADC2_In_N_1 1 0 1 N 1180
preplace netloc ADC2_In_P_1 1 0 1 N 1200
preplace netloc ADC2_Overrange_1 1 1 2 NJ 1140 650
preplace netloc ADC_Ctrl_1 1 3 2 3120 220 3890
preplace netloc ADC_LVDS_Pins_ADC1_SingleEnded 1 1 4 N 1120 660 3404 3370 1420 3800
preplace netloc ADC_LVDS_Pins_ADC2_SingleEnded 1 1 4 N 1180 630 3444 3410 1440 3810
preplace netloc ADC_MISO_0_1 1 0 3 -150J 940 NJ 940 710J
preplace netloc BUFF_Alex_Pin1_0_1 1 0 5 -150J -40 NJ -40 NJ -40 NJ -40 3910J
preplace netloc BUFF_Alex_Pin8_0_1 1 0 5 -110J 100 NJ 100 NJ 100 NJ 100 3900J
preplace netloc CodecConfig_1 1 3 2 3230 976 N
preplace netloc DAC_Ctrl_1 1 3 2 3170 230 3870
preplace netloc DAC_LVDS_Pins_DAC_Out_N 1 7 1 N 810
preplace netloc DAC_LVDS_Pins_DAC_Out_P 1 7 1 N 830
preplace netloc DAC_SingleEnded_1 1 5 2 N 748 5270
preplace netloc EMC_CLK_1 1 0 1 -120 400n
preplace netloc I2S_xmit_0_outbit 1 5 3 4520J 1060 5290 1080 N
preplace netloc PCIe_ADC_CLK 1 3 5 3250J 1066 3720J 1156 4540J 1070 5270 1090 5730J
preplace netloc PCIe_ADC_MOSI 1 3 5 3290J 1146 NJ 1146 4550J 1080 5250 1100 5700J
preplace netloc PCIe_FPGA_CM4_EN 1 3 5 3320J 1166 NJ 1166 4530J 1050 5310 1070 5760J
preplace netloc PCIe_LEDDrivers 1 3 5 3150 -30 N -30 NJ -30 5280 140 5750J
preplace netloc PCIe_PCIECLKREQN 1 3 5 3330J 1186 NJ 1186 4580J 1090 5240 1110 5820J
preplace netloc PCIe_PCI_LINK_LED 1 3 5 3340 1400 3670J 1680 NJ 1680 5310 1510 NJ
preplace netloc PCIe_RFGPIOData 1 3 2 3220 250 3860
preplace netloc PCIe_TXTestFreqData 1 3 2 3300 758 N
preplace netloc PCIe_T_SMBCLK_0_1 1 0 3 -130J 950 NJ 950 700J
preplace netloc PCIe_T_SMBDAT_0_1 1 0 3 -120J 960 NJ 960 680J
preplace netloc PCIe_aresetn12 1 3 3 3380J 1450 3660J 1590 4490
preplace netloc PCIe_axi_aclk_125 1 3 3 3350J 1410 3690J 1530 N
preplace netloc PCIe_axi_resetn 1 3 1 3210 40n
preplace netloc PCIe_nADC_CS 1 3 5 3400J 1690 NJ 1690 NJ 1690 5250 1490 NJ
preplace netloc PWM_DAC_0_DAC_bit 1 5 3 NJ 560 N 560 5680
preplace netloc RF_interfaces_ADC_Randomise 1 4 2 3920 20 4490
preplace netloc RF_interfaces_BUF_Out_FPGA 1 5 3 NJ 260 5320 350 5820J
preplace netloc RF_interfaces_Dac_Atten_Clk 1 5 3 NJ 340 5290 420 5810J
preplace netloc RF_interfaces_Dac_Atten_Data 1 5 3 NJ 360 5280 430 5800J
preplace netloc RF_interfaces_Dac_Atten_LE 1 5 3 NJ 380 5270 440 NJ
preplace netloc RF_interfaces_Dac_Atten_Mode 1 5 3 4620J 430 5250 460 NJ
preplace netloc RF_interfaces_status_out 1 2 4 730 3494 3450 1540 N 1540 4510
preplace netloc SPI_0_Rx_load_strobe 1 5 3 NJ 500 N 500 5700
preplace netloc SPI_0_SPI_clock 1 5 3 NJ 460 5230 480 5740
preplace netloc SPI_0_SPI_data 1 5 3 NJ 480 5220 490 5720
preplace netloc SPI_0_Tx_load_strobe 1 5 3 NJ 520 N 520 5690
preplace netloc SerialAtten_0_ATTN_CLK 1 5 3 4530J -120 N -120 5680
preplace netloc SerialAtten_0_ATTN_DATA 1 5 3 4540J -110 N -110 5690
preplace netloc SerialAtten_0_ATTN_LE 1 5 3 4600J -100 N -100 5700
preplace netloc SerialAtten_1_ATTN_CLK 1 5 3 4610J -90 N -90 5710
preplace netloc SerialAtten_1_ATTN_DATA 1 5 3 4620J -80 N -80 5720
preplace netloc SerialAtten_1_ATTN_LE 1 5 3 4650J -60 5310 110 5730
preplace netloc TXConfig_1 1 3 2 3240 698 N
preplace netloc TXLOTune_1 1 3 2 3270 718 N
preplace netloc TX_ENABLE_0_1 1 0 5 NJ 780 NJ 780 720 760 3280J 778 NJ
preplace netloc Transmitter_cw_ptt1 1 4 2 3950 0 4520
preplace netloc aresetn_125_1 1 3 3 3360J 1430 3680J 1570 4560
preplace netloc audio_codec_MCLK 1 5 3 N 1026 N 1026 5790
preplace netloc c_counter_binary_0_Q 1 1 1 N 400
preplace netloc clk_wiz_0_clk_out2 1 1 5 NJ 1370 610 3424 3420 1470 3820 1560 4650
preplace netloc clock_122_1 1 0 1 -140J 1350n
preplace netloc clock_122_delayed_1 1 1 4 N 1350 640 3414 3390 1460 3830
preplace netloc clock_122_in_n_1 1 0 1 -160J 1300n
preplace netloc clock_generator_clock_122_out 1 1 5 N 1330 620 3434 3430 1480 3840 1550 N
preplace netloc cw_key_1 1 4 2 3940 10 4510
preplace netloc i2s_clk_lrclk_gen_0_BCLK 1 5 3 NJ 986 N 986 5750
preplace netloc i2s_clk_lrclk_gen_0_LRCLK 1 5 3 4530J 976 N 976 5750
preplace netloc is2rxd_1 1 0 5 NJ 760 N 760 600 750 3290 768 3830
preplace netloc keyer_config_1 1 3 2 3310 1136 3760
preplace netloc ref_in_10_1 1 0 1 -110J 1370n
preplace netloc regmux_2_1_1_dout 1 5 3 NJ 320 5300 370 N
preplace netloc reset_rtl_0_1 1 0 3 NJ 920 N 920 690
preplace netloc status_in_1 1 0 5 NJ 580 N 580 N 580 N 580 3760
preplace netloc tx_samples_1 1 4 2 3930 30 4500
preplace netloc util_reduced_logic_0_Res 1 1 7 360 -200 N -200 N -200 N -200 NJ -200 N -200 N
preplace netloc util_reduced_logic_1_Res 1 4 4 3960 40 4660 450 5240 470 5760
preplace netloc util_reduced_logic_2_Res 1 5 3 NJ 280 5310 360 5790
preplace netloc util_reduced_logic_3_Res 1 5 3 NJ 540 N 540 5710
preplace netloc xlslice_0_Dout 1 5 3 NJ 420 5260 450 5780
preplace netloc xlslice_0_Dout1 1 4 2 3790 1580 4500
preplace netloc xlslice_1_Dout1 1 4 1 3880 160n
preplace netloc xlslice_2_Dout 1 4 1 3850 310n
preplace netloc xlslice_3_Dout 1 4 1 3780 410n
preplace netloc xlslice_4_Dout 1 0 5 -100 1500 N 1500 600 3454 3440 1500 3650
preplace netloc xlslice_5_Dout 1 5 3 NJ 240 N 240 5820
preplace netloc xlslice_5_Dout1 1 2 6 600J -60 NJ -60 NJ -60 4500J -50 5300 120 5740
preplace netloc FIFO_Interfaces_M_AXIS_codec 1 4 3 3960 1126 4560J 1100 5230
preplace netloc PCIe_M03_AXI_0 1 3 3 3160J 940 3750J 1206 4540
preplace netloc PCIe_M05_AXI_0 1 3 3 3180J 986 3710J 1510 4620
preplace netloc PCIe_M_AXI_Alex 1 3 2 3110 240 NJ
preplace netloc PCIe_M_AXI_full_0 1 3 3 3200J 1026 3730J 1176 4590
preplace netloc PCIe_SPI_0_0 1 3 5 3090J -50 NJ -50 4490J -40 5290 130 5770J
preplace netloc PCIe_iic_rtl_0 1 3 5 3080J -70 NJ -70 NJ -70 5320 100 NJ
preplace netloc PCIe_pcie_7x_mgt_rtl_0 1 3 5 3100 -20 N -20 N -20 5260 150 5760
preplace netloc Receiver_m_axis_DDC0 1 5 1 4610 1170n
preplace netloc Receiver_m_axis_DDC1 1 5 1 4620 1190n
preplace netloc Receiver_m_axis_DDC2 1 5 1 4630 1210n
preplace netloc Receiver_m_axis_DDC3 1 5 1 4640 1230n
preplace netloc Receiver_m_axis_DDC4 1 5 1 4650 1250n
preplace netloc Receiver_m_axis_DDC5 1 5 1 4550 1270n
preplace netloc Receiver_m_axis_DDC6 1 5 1 4660 1290n
preplace netloc Receiver_m_axis_DDC7 1 5 1 4670 1310n
preplace netloc Receiver_m_axis_DDC8 1 5 1 4520 1330n
preplace netloc Receiver_m_axis_DDC9 1 5 1 4680 1350n
preplace netloc TX_IQ_In_1 1 4 3 3950 1136 4570J 1110 5220
preplace netloc audio_codec_RX_Audio_Data 1 5 1 4600 966n
preplace netloc diff_clock_rtl_0_1 1 0 3 NJ 800 N 800 730
preplace netloc s_axi_0_1 1 3 2 3130J 900 3770
preplace netloc s_axi_1_1 1 3 2 3140J 920 3740
preplace netloc s_axi_lite_1_1 1 3 3 3260J 1196 NJ 1196 4560
preplace netloc s_axi_lite_3_1 1 3 3 3190J 1006 3700J 1520 4680
preplace netloc PCIe|ACLK_1 1 3 4 1590 2302 1940 2572 2310 2972 2710
preplace netloc PCIe|ADC1_Overrange_1 1 0 6 900J 1302 NJ 1302 NJ 1302 NJ 1302 NJ 1302 2280
preplace netloc PCIe|ADC2_Overrange_1 1 0 6 920J 1312 NJ 1312 NJ 1312 NJ 1312 NJ 1312 2290
preplace netloc PCIe|ADC_MISO_1 1 0 6 890J 1482 NJ 1482 NJ 1482 NJ 1482 1910J 1342 2370
preplace netloc PCIe|ARESETN_1 1 0 7 940 1802 NJ 1802 NJ 1802 1570 2312 1950 2582 2350 2982 2700
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg0 1 6 1 2840 1802n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg1 1 6 1 2860 1822n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg2 1 6 1 2770 1842n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg3 1 6 1 2740 1862n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg4 1 6 1 2720 1882n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg5 1 6 1 2730 1902n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg6 1 6 1 2830 1922n
preplace netloc PCIe|AXIL_ConfigReg_256_2_config_reg7 1 6 1 2750 1942n
preplace netloc PCIe|AXIL_ConfigReg_64_0_config_reg0 1 5 2 2370 2642 2680
preplace netloc PCIe|AXI_SPI_ADC_0_MOSI 1 6 1 2880 1642n
preplace netloc PCIe|AXI_SPI_ADC_0_SCLK 1 6 1 2870 1662n
preplace netloc PCIe|AXI_SPI_ADC_0_nCS 1 6 1 2800 1622n
preplace netloc PCIe|D_register_0_dout 1 6 1 2850 1332n
preplace netloc PCIe|Double_D_register_syncareset1_dout 1 6 1 N 3052
preplace netloc PCIe|Net2 1 1 4 1170 1242 NJ 1242 NJ 1242 1890J
preplace netloc PCIe|Net3 1 1 5 1180 1472 NJ 1472 NJ 1472 1900J 1332 NJ
preplace netloc PCIe|Status_data_1 1 0 4 910J 1522 NJ 1522 NJ 1522 1560
preplace netloc PCIe|TX_ENABLE_1 1 0 4 930J 1532 NJ 1532 NJ 1532 1590
preplace netloc PCIe|Usr_Reg_Access_0_Usr_Reg_Data 1 4 2 NJ 932 NJ
preplace netloc PCIe|clk12_1 1 0 6 NJ 3042 NJ 3042 NJ 3042 NJ 3042 NJ 3042 N
preplace netloc PCIe|clk_122_1 1 0 6 940 1542 1160 1782 NJ 1782 1580 2012 1920 1882 2300
preplace netloc PCIe|pci_clk_buf_IBUF_OUT 1 4 2 1900J 1862 2310
preplace netloc PCIe|reset_rtl_0_1 1 0 6 910J 1792 NJ 1792 NJ 1792 NJ 1792 1890J 1872 2260
preplace netloc PCIe|util_vector_logic_0_Res 1 6 1 2690J 2752n
preplace netloc PCIe|xdma_0_axi_aresetn 1 2 4 1400 1812 1560 2022 1940 1892 2330
preplace netloc PCIe|xdma_0_user_lnk_up 1 5 2 2380 2652 2690
preplace netloc PCIe|xlconcat_0_dout 1 4 2 1890J 1322 2270
preplace netloc PCIe|xlconcat_2_dout 1 5 1 2380J 1202n
preplace netloc PCIe|xlconstant_0_dout 1 3 1 NJ 1392
preplace netloc PCIe|xlconstant_2_dout 1 6 1 2890 1212n
preplace netloc PCIe|xlconstant_2_pciebusreq_dout 1 6 1 2680J 2732n
preplace netloc PCIe|xlslice_15_Dout 1 6 1 NJ 2712
preplace netloc PCIe|Conn1 1 5 2 2310 1412 2900J
preplace netloc PCIe|Conn2 1 0 4 NJ 1552 NJ 1552 NJ 1552 NJ
preplace netloc PCIe|Conn3 1 6 1 N 1472
preplace netloc PCIe|Conn4 1 6 1 2780 1452n
preplace netloc PCIe|Conn5 1 5 2 2350 1732 2770J
preplace netloc PCIe|Conn6 1 5 2 2360 1742 NJ
preplace netloc PCIe|Conn7 1 5 2 2320 2282 2810J
preplace netloc PCIe|Conn8 1 5 2 2340 2292 NJ
preplace netloc PCIe|Conn9 1 5 2 2360 2312 NJ
preplace netloc PCIe|Conn10 1 5 2 2380 2322 2790J
preplace netloc PCIe|Conn11 1 6 1 2820 2062n
preplace netloc PCIe|S00_AXI_1 1 3 4 1590 2002 NJ 2002 NJ 2002 2690
preplace netloc PCIe|axi_interconnect_0_M03_AXI 1 5 1 2320 1472n
preplace netloc PCIe|axi_interconnect_0_M05_AXI 1 5 1 2260 1032n
preplace netloc PCIe|axi_interconnect_0_M06_AXI 1 5 1 2280 1612n
preplace netloc PCIe|axi_interconnect_122_M02_AXI 1 5 1 2340 1572n
preplace netloc PCIe|axi_interconnect_122_M04_AXI 1 5 1 2250 852n
preplace netloc PCIe|axi_interconnect_lite_125_M00_AXI 1 5 1 2300 2272n
preplace netloc PCIe|axi_interconnect_lite_125_M01_AXI 1 5 1 2270 2292n
preplace netloc PCIe|axi_interconnect_lite_125_M02_AXI 1 5 1 2260 2312n
preplace netloc PCIe|axi_interconnect_lite_M00_AXI 1 4 1 N 2152
preplace netloc PCIe|axi_interconnect_lite_M01_AXI 1 4 1 1930 1402n
preplace netloc PCIe|xdma_0_pcie_mgt 1 6 1 2760 1682n
preplace cgraphic comment_14 place top 0 60 textcolor 4 linecolor 3
preplace cgraphic comment_13 place top 0 60 textcolor 4 linecolor 3
preplace cgraphic comment_12 place top 0 60 textcolor 4 linecolor 3
preplace cgraphic comment_10 place left -49 -393 textcolor 4 linecolor 3
preplace cgraphic comment_9 place left -48 -449 textcolor 4 linecolor 3
preplace cgraphic comment_8 place left -71 -114 textcolor 4 linecolor 3
levelinfo -pg 1 -180 170 500 990 3550 4321 4971 5511 5840
levelinfo -hier PCIe * 1050 1290 1480 1740 2100 2530 *
pagesize -pg 1 -db -bbox -sgen -360 -230 6030 4370
pagesize -hier PCIe -db -bbox -sgen 860 792 2930 3382
",
   "linecolor_comment_10":"",
   "linecolor_comment_8":"",
   "linecolor_comment_9":"",
   "linktoobj_comment_10":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_12":"",
   "linktoobj_comment_13":"",
   "linktoobj_comment_14":"",
   "linktoobj_comment_8":"/RF_interfaces/BUFF_Alex_Pin1",
   "linktoobj_comment_9":"/PCIe/PCIe_T_SMBDAT",
   "linktotype_comment_10":"bd_port",
   "linktotype_comment_12":"bd_design",
   "linktotype_comment_13":"bd_design",
   "linktotype_comment_14":"bd_design",
   "linktotype_comment_8":"bd_port",
   "linktotype_comment_9":"bd_port",
   "textcolor_comment_10":"",
   "textcolor_comment_8":"",
   "textcolor_comment_9":""
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_saturn_top()
cr_bd_saturn_top ""
set_property REGISTERED_WITH_MANAGER "1" [get_files saturn_top.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files saturn_top.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse saturn_top.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/saturn_project/saturn_project.gen/sources_1/bd/saturn_top/hdl/saturn_top_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse saturn_top.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


generate_target all [get_files saturn_top.bd]

# Set 'DDC_Block_inst_3' fileset object
set obj [get_filesets DDC_Block_inst_3]
# Set 'DDC_Block_inst_3' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_3' fileset file properties for local files
# None

# Set 'DDC_Block_inst_3' fileset properties
set obj [get_filesets DDC_Block_inst_3]
set_property -name "top" -value "DDC_Block_inst_3" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_4' fileset object
set obj [get_filesets DDC_Block_inst_4]
# Set 'DDC_Block_inst_4' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_4' fileset file properties for local files
# None

# Set 'DDC_Block_inst_4' fileset properties
set obj [get_filesets DDC_Block_inst_4]
set_property -name "top" -value "DDC_Block_inst_4" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_1' fileset object
set obj [get_filesets DDC_Block_inst_1]
# Set 'DDC_Block_inst_1' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_1' fileset file properties for local files
# None

# Set 'DDC_Block_inst_1' fileset properties
set obj [get_filesets DDC_Block_inst_1]
set_property -name "top" -value "DDC_Block_inst_1" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_2' fileset object
set obj [get_filesets DDC_Block_inst_2]
# Set 'DDC_Block_inst_2' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_2' fileset file properties for local files
# None

# Set 'DDC_Block_inst_2' fileset properties
set obj [get_filesets DDC_Block_inst_2]
set_property -name "top" -value "DDC_Block_inst_2" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_5' fileset object
set obj [get_filesets DDC_Block_inst_5]
# Set 'DDC_Block_inst_5' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_5' fileset file properties for local files
# None

# Set 'DDC_Block_inst_5' fileset properties
set obj [get_filesets DDC_Block_inst_5]
set_property -name "top" -value "DDC_Block_inst_5" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_6' fileset object
set obj [get_filesets DDC_Block_inst_6]
# Set 'DDC_Block_inst_6' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_6' fileset file properties for local files
# None

# Set 'DDC_Block_inst_6' fileset properties
set obj [get_filesets DDC_Block_inst_6]
set_property -name "top" -value "DDC_Block_inst_6" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_7' fileset object
set obj [get_filesets DDC_Block_inst_7]
# Set 'DDC_Block_inst_7' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_7' fileset file properties for local files
# None

# Set 'DDC_Block_inst_7' fileset properties
set obj [get_filesets DDC_Block_inst_7]
set_property -name "top" -value "DDC_Block_inst_7" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_8' fileset object
set obj [get_filesets DDC_Block_inst_8]
# Set 'DDC_Block_inst_8' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_8' fileset file properties for local files
# None

# Set 'DDC_Block_inst_8' fileset properties
set obj [get_filesets DDC_Block_inst_8]
set_property -name "top" -value "DDC_Block_inst_8" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_9' fileset object
set obj [get_filesets DDC_Block_inst_9]
# Set 'DDC_Block_inst_9' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_9' fileset file properties for local files
# None

# Set 'DDC_Block_inst_9' fileset properties
set obj [get_filesets DDC_Block_inst_9]
set_property -name "top" -value "DDC_Block_inst_9" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_10' fileset object
set obj [get_filesets DDC_Block_inst_10]
# Set 'DDC_Block_inst_10' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_10' fileset file properties for local files
# None

# Set 'DDC_Block_inst_10' fileset properties
set obj [get_filesets DDC_Block_inst_10]
set_property -name "top" -value "DDC_Block_inst_10" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a200tfbg676-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_1] ""]} {
    create_run -name impl_1_copy_1 -part xc7a75tfgg484-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1_copy_1]
}
set obj [get_runs impl_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_copy_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_copy_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_1]
set_property -name "part" -value "xc7a75tfgg484-2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
